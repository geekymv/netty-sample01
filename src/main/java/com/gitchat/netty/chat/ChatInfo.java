// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/resources/protobuf/chat/Chat.proto

package com.gitchat.netty.chat;

public final class ChatInfo {
  private ChatInfo() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ChatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.gitchat.netty.protobuf.Chat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes version = 1;</code>
     */
    com.google.protobuf.ByteString getVersion();

    /**
     * <code>.com.gitchat.netty.protobuf.Chat.MessageType msg_type = 2;</code>
     */
    int getMsgTypeValue();
    /**
     * <code>.com.gitchat.netty.protobuf.Chat.MessageType msg_type = 2;</code>
     */
    com.gitchat.netty.chat.ChatInfo.Chat.MessageType getMsgType();

    /**
     * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
     */
    boolean hasReq();
    /**
     * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
     */
    com.gitchat.netty.chat.ChatInfo.Request getReq();
    /**
     * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
     */
    com.gitchat.netty.chat.ChatInfo.RequestOrBuilder getReqOrBuilder();

    /**
     * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
     */
    boolean hasResp();
    /**
     * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
     */
    com.gitchat.netty.chat.ChatInfo.Response getResp();
    /**
     * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
     */
    com.gitchat.netty.chat.ChatInfo.ResponseOrBuilder getRespOrBuilder();

    /**
     * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
     */
    boolean hasNotifi();
    /**
     * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
     */
    com.gitchat.netty.chat.ChatInfo.Notification getNotifi();
    /**
     * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
     */
    com.gitchat.netty.chat.ChatInfo.NotificationOrBuilder getNotifiOrBuilder();

    public com.gitchat.netty.chat.ChatInfo.Chat.DataCase getDataCase();
  }
  /**
   * Protobuf type {@code com.gitchat.netty.protobuf.Chat}
   */
  public  static final class Chat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.gitchat.netty.protobuf.Chat)
      ChatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Chat.newBuilder() to construct.
    private Chat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Chat() {
      version_ = com.google.protobuf.ByteString.EMPTY;
      msgType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Chat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              version_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              msgType_ = rawValue;
              break;
            }
            case 26: {
              com.gitchat.netty.chat.ChatInfo.Request.Builder subBuilder = null;
              if (dataCase_ == 3) {
                subBuilder = ((com.gitchat.netty.chat.ChatInfo.Request) data_).toBuilder();
              }
              data_ =
                  input.readMessage(com.gitchat.netty.chat.ChatInfo.Request.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.gitchat.netty.chat.ChatInfo.Request) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 3;
              break;
            }
            case 34: {
              com.gitchat.netty.chat.ChatInfo.Response.Builder subBuilder = null;
              if (dataCase_ == 4) {
                subBuilder = ((com.gitchat.netty.chat.ChatInfo.Response) data_).toBuilder();
              }
              data_ =
                  input.readMessage(com.gitchat.netty.chat.ChatInfo.Response.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.gitchat.netty.chat.ChatInfo.Response) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 4;
              break;
            }
            case 42: {
              com.gitchat.netty.chat.ChatInfo.Notification.Builder subBuilder = null;
              if (dataCase_ == 5) {
                subBuilder = ((com.gitchat.netty.chat.ChatInfo.Notification) data_).toBuilder();
              }
              data_ =
                  input.readMessage(com.gitchat.netty.chat.ChatInfo.Notification.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.gitchat.netty.chat.ChatInfo.Notification) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 5;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Chat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Chat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gitchat.netty.chat.ChatInfo.Chat.class, com.gitchat.netty.chat.ChatInfo.Chat.Builder.class);
    }

    /**
     * Protobuf enum {@code com.gitchat.netty.protobuf.Chat.MessageType}
     */
    public enum MessageType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LOGIN_REQUEST = 0;</code>
       */
      LOGIN_REQUEST(0),
      /**
       * <code>LOGIN_RESPONSE = 1;</code>
       */
      LOGIN_RESPONSE(1),
      /**
       * <code>SINGLE_CHAT = 2;</code>
       */
      SINGLE_CHAT(2),
      /**
       * <code>GROUP_CHAT = 3;</code>
       */
      GROUP_CHAT(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>LOGIN_REQUEST = 0;</code>
       */
      public static final int LOGIN_REQUEST_VALUE = 0;
      /**
       * <code>LOGIN_RESPONSE = 1;</code>
       */
      public static final int LOGIN_RESPONSE_VALUE = 1;
      /**
       * <code>SINGLE_CHAT = 2;</code>
       */
      public static final int SINGLE_CHAT_VALUE = 2;
      /**
       * <code>GROUP_CHAT = 3;</code>
       */
      public static final int GROUP_CHAT_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MessageType valueOf(int value) {
        return forNumber(value);
      }

      public static MessageType forNumber(int value) {
        switch (value) {
          case 0: return LOGIN_REQUEST;
          case 1: return LOGIN_RESPONSE;
          case 2: return SINGLE_CHAT;
          case 3: return GROUP_CHAT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MessageType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
              public MessageType findValueByNumber(int number) {
                return MessageType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.gitchat.netty.chat.ChatInfo.Chat.getDescriptor().getEnumTypes().get(0);
      }

      private static final MessageType[] VALUES = values();

      public static MessageType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private MessageType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.gitchat.netty.protobuf.Chat.MessageType)
    }

    private int dataCase_ = 0;
    private java.lang.Object data_;
    public enum DataCase
        implements com.google.protobuf.Internal.EnumLite {
      REQ(3),
      RESP(4),
      NOTIFI(5),
      DATA_NOT_SET(0);
      private final int value;
      private DataCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataCase valueOf(int value) {
        return forNumber(value);
      }

      public static DataCase forNumber(int value) {
        switch (value) {
          case 3: return REQ;
          case 4: return RESP;
          case 5: return NOTIFI;
          case 0: return DATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DataCase
    getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString version_;
    /**
     * <code>bytes version = 1;</code>
     */
    public com.google.protobuf.ByteString getVersion() {
      return version_;
    }

    public static final int MSG_TYPE_FIELD_NUMBER = 2;
    private int msgType_;
    /**
     * <code>.com.gitchat.netty.protobuf.Chat.MessageType msg_type = 2;</code>
     */
    public int getMsgTypeValue() {
      return msgType_;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.Chat.MessageType msg_type = 2;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.Chat.MessageType getMsgType() {
      @SuppressWarnings("deprecation")
      com.gitchat.netty.chat.ChatInfo.Chat.MessageType result = com.gitchat.netty.chat.ChatInfo.Chat.MessageType.valueOf(msgType_);
      return result == null ? com.gitchat.netty.chat.ChatInfo.Chat.MessageType.UNRECOGNIZED : result;
    }

    public static final int REQ_FIELD_NUMBER = 3;
    /**
     * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
     */
    public boolean hasReq() {
      return dataCase_ == 3;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.Request getReq() {
      if (dataCase_ == 3) {
         return (com.gitchat.netty.chat.ChatInfo.Request) data_;
      }
      return com.gitchat.netty.chat.ChatInfo.Request.getDefaultInstance();
    }
    /**
     * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.RequestOrBuilder getReqOrBuilder() {
      if (dataCase_ == 3) {
         return (com.gitchat.netty.chat.ChatInfo.Request) data_;
      }
      return com.gitchat.netty.chat.ChatInfo.Request.getDefaultInstance();
    }

    public static final int RESP_FIELD_NUMBER = 4;
    /**
     * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
     */
    public boolean hasResp() {
      return dataCase_ == 4;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.Response getResp() {
      if (dataCase_ == 4) {
         return (com.gitchat.netty.chat.ChatInfo.Response) data_;
      }
      return com.gitchat.netty.chat.ChatInfo.Response.getDefaultInstance();
    }
    /**
     * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.ResponseOrBuilder getRespOrBuilder() {
      if (dataCase_ == 4) {
         return (com.gitchat.netty.chat.ChatInfo.Response) data_;
      }
      return com.gitchat.netty.chat.ChatInfo.Response.getDefaultInstance();
    }

    public static final int NOTIFI_FIELD_NUMBER = 5;
    /**
     * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
     */
    public boolean hasNotifi() {
      return dataCase_ == 5;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.Notification getNotifi() {
      if (dataCase_ == 5) {
         return (com.gitchat.netty.chat.ChatInfo.Notification) data_;
      }
      return com.gitchat.netty.chat.ChatInfo.Notification.getDefaultInstance();
    }
    /**
     * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.NotificationOrBuilder getNotifiOrBuilder() {
      if (dataCase_ == 5) {
         return (com.gitchat.netty.chat.ChatInfo.Notification) data_;
      }
      return com.gitchat.netty.chat.ChatInfo.Notification.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!version_.isEmpty()) {
        output.writeBytes(1, version_);
      }
      if (msgType_ != com.gitchat.netty.chat.ChatInfo.Chat.MessageType.LOGIN_REQUEST.getNumber()) {
        output.writeEnum(2, msgType_);
      }
      if (dataCase_ == 3) {
        output.writeMessage(3, (com.gitchat.netty.chat.ChatInfo.Request) data_);
      }
      if (dataCase_ == 4) {
        output.writeMessage(4, (com.gitchat.netty.chat.ChatInfo.Response) data_);
      }
      if (dataCase_ == 5) {
        output.writeMessage(5, (com.gitchat.netty.chat.ChatInfo.Notification) data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!version_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, version_);
      }
      if (msgType_ != com.gitchat.netty.chat.ChatInfo.Chat.MessageType.LOGIN_REQUEST.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, msgType_);
      }
      if (dataCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.gitchat.netty.chat.ChatInfo.Request) data_);
      }
      if (dataCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.gitchat.netty.chat.ChatInfo.Response) data_);
      }
      if (dataCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.gitchat.netty.chat.ChatInfo.Notification) data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.gitchat.netty.chat.ChatInfo.Chat)) {
        return super.equals(obj);
      }
      com.gitchat.netty.chat.ChatInfo.Chat other = (com.gitchat.netty.chat.ChatInfo.Chat) obj;

      boolean result = true;
      result = result && getVersion()
          .equals(other.getVersion());
      result = result && msgType_ == other.msgType_;
      result = result && getDataCase().equals(
          other.getDataCase());
      if (!result) return false;
      switch (dataCase_) {
        case 3:
          result = result && getReq()
              .equals(other.getReq());
          break;
        case 4:
          result = result && getResp()
              .equals(other.getResp());
          break;
        case 5:
          result = result && getNotifi()
              .equals(other.getNotifi());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + MSG_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + msgType_;
      switch (dataCase_) {
        case 3:
          hash = (37 * hash) + REQ_FIELD_NUMBER;
          hash = (53 * hash) + getReq().hashCode();
          break;
        case 4:
          hash = (37 * hash) + RESP_FIELD_NUMBER;
          hash = (53 * hash) + getResp().hashCode();
          break;
        case 5:
          hash = (37 * hash) + NOTIFI_FIELD_NUMBER;
          hash = (53 * hash) + getNotifi().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.gitchat.netty.chat.ChatInfo.Chat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Chat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Chat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Chat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Chat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Chat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Chat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Chat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Chat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Chat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Chat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Chat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.gitchat.netty.chat.ChatInfo.Chat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.gitchat.netty.protobuf.Chat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.gitchat.netty.protobuf.Chat)
        com.gitchat.netty.chat.ChatInfo.ChatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Chat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Chat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.gitchat.netty.chat.ChatInfo.Chat.class, com.gitchat.netty.chat.ChatInfo.Chat.Builder.class);
      }

      // Construct using com.gitchat.netty.chat.ChatInfo.Chat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        version_ = com.google.protobuf.ByteString.EMPTY;

        msgType_ = 0;

        dataCase_ = 0;
        data_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Chat_descriptor;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Chat getDefaultInstanceForType() {
        return com.gitchat.netty.chat.ChatInfo.Chat.getDefaultInstance();
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Chat build() {
        com.gitchat.netty.chat.ChatInfo.Chat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Chat buildPartial() {
        com.gitchat.netty.chat.ChatInfo.Chat result = new com.gitchat.netty.chat.ChatInfo.Chat(this);
        result.version_ = version_;
        result.msgType_ = msgType_;
        if (dataCase_ == 3) {
          if (reqBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = reqBuilder_.build();
          }
        }
        if (dataCase_ == 4) {
          if (respBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = respBuilder_.build();
          }
        }
        if (dataCase_ == 5) {
          if (notifiBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = notifiBuilder_.build();
          }
        }
        result.dataCase_ = dataCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gitchat.netty.chat.ChatInfo.Chat) {
          return mergeFrom((com.gitchat.netty.chat.ChatInfo.Chat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.gitchat.netty.chat.ChatInfo.Chat other) {
        if (other == com.gitchat.netty.chat.ChatInfo.Chat.getDefaultInstance()) return this;
        if (other.getVersion() != com.google.protobuf.ByteString.EMPTY) {
          setVersion(other.getVersion());
        }
        if (other.msgType_ != 0) {
          setMsgTypeValue(other.getMsgTypeValue());
        }
        switch (other.getDataCase()) {
          case REQ: {
            mergeReq(other.getReq());
            break;
          }
          case RESP: {
            mergeResp(other.getResp());
            break;
          }
          case NOTIFI: {
            mergeNotifi(other.getNotifi());
            break;
          }
          case DATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.gitchat.netty.chat.ChatInfo.Chat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.gitchat.netty.chat.ChatInfo.Chat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int dataCase_ = 0;
      private java.lang.Object data_;
      public DataCase
          getDataCase() {
        return DataCase.forNumber(
            dataCase_);
      }

      public Builder clearData() {
        dataCase_ = 0;
        data_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.ByteString version_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes version = 1;</code>
       */
      public com.google.protobuf.ByteString getVersion() {
        return version_;
      }
      /**
       * <code>bytes version = 1;</code>
       */
      public Builder setVersion(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes version = 1;</code>
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }

      private int msgType_ = 0;
      /**
       * <code>.com.gitchat.netty.protobuf.Chat.MessageType msg_type = 2;</code>
       */
      public int getMsgTypeValue() {
        return msgType_;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Chat.MessageType msg_type = 2;</code>
       */
      public Builder setMsgTypeValue(int value) {
        msgType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Chat.MessageType msg_type = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.Chat.MessageType getMsgType() {
        @SuppressWarnings("deprecation")
        com.gitchat.netty.chat.ChatInfo.Chat.MessageType result = com.gitchat.netty.chat.ChatInfo.Chat.MessageType.valueOf(msgType_);
        return result == null ? com.gitchat.netty.chat.ChatInfo.Chat.MessageType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Chat.MessageType msg_type = 2;</code>
       */
      public Builder setMsgType(com.gitchat.netty.chat.ChatInfo.Chat.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        msgType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Chat.MessageType msg_type = 2;</code>
       */
      public Builder clearMsgType() {
        
        msgType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.Request, com.gitchat.netty.chat.ChatInfo.Request.Builder, com.gitchat.netty.chat.ChatInfo.RequestOrBuilder> reqBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
       */
      public boolean hasReq() {
        return dataCase_ == 3;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.Request getReq() {
        if (reqBuilder_ == null) {
          if (dataCase_ == 3) {
            return (com.gitchat.netty.chat.ChatInfo.Request) data_;
          }
          return com.gitchat.netty.chat.ChatInfo.Request.getDefaultInstance();
        } else {
          if (dataCase_ == 3) {
            return reqBuilder_.getMessage();
          }
          return com.gitchat.netty.chat.ChatInfo.Request.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
       */
      public Builder setReq(com.gitchat.netty.chat.ChatInfo.Request value) {
        if (reqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          reqBuilder_.setMessage(value);
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
       */
      public Builder setReq(
          com.gitchat.netty.chat.ChatInfo.Request.Builder builderForValue) {
        if (reqBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          reqBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
       */
      public Builder mergeReq(com.gitchat.netty.chat.ChatInfo.Request value) {
        if (reqBuilder_ == null) {
          if (dataCase_ == 3 &&
              data_ != com.gitchat.netty.chat.ChatInfo.Request.getDefaultInstance()) {
            data_ = com.gitchat.netty.chat.ChatInfo.Request.newBuilder((com.gitchat.netty.chat.ChatInfo.Request) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 3) {
            reqBuilder_.mergeFrom(value);
          }
          reqBuilder_.setMessage(value);
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
       */
      public Builder clearReq() {
        if (reqBuilder_ == null) {
          if (dataCase_ == 3) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 3) {
            dataCase_ = 0;
            data_ = null;
          }
          reqBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.Request.Builder getReqBuilder() {
        return getReqFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.RequestOrBuilder getReqOrBuilder() {
        if ((dataCase_ == 3) && (reqBuilder_ != null)) {
          return reqBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 3) {
            return (com.gitchat.netty.chat.ChatInfo.Request) data_;
          }
          return com.gitchat.netty.chat.ChatInfo.Request.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Request req = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.Request, com.gitchat.netty.chat.ChatInfo.Request.Builder, com.gitchat.netty.chat.ChatInfo.RequestOrBuilder> 
          getReqFieldBuilder() {
        if (reqBuilder_ == null) {
          if (!(dataCase_ == 3)) {
            data_ = com.gitchat.netty.chat.ChatInfo.Request.getDefaultInstance();
          }
          reqBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.Request, com.gitchat.netty.chat.ChatInfo.Request.Builder, com.gitchat.netty.chat.ChatInfo.RequestOrBuilder>(
                  (com.gitchat.netty.chat.ChatInfo.Request) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 3;
        onChanged();;
        return reqBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.Response, com.gitchat.netty.chat.ChatInfo.Response.Builder, com.gitchat.netty.chat.ChatInfo.ResponseOrBuilder> respBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
       */
      public boolean hasResp() {
        return dataCase_ == 4;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.Response getResp() {
        if (respBuilder_ == null) {
          if (dataCase_ == 4) {
            return (com.gitchat.netty.chat.ChatInfo.Response) data_;
          }
          return com.gitchat.netty.chat.ChatInfo.Response.getDefaultInstance();
        } else {
          if (dataCase_ == 4) {
            return respBuilder_.getMessage();
          }
          return com.gitchat.netty.chat.ChatInfo.Response.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
       */
      public Builder setResp(com.gitchat.netty.chat.ChatInfo.Response value) {
        if (respBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          respBuilder_.setMessage(value);
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
       */
      public Builder setResp(
          com.gitchat.netty.chat.ChatInfo.Response.Builder builderForValue) {
        if (respBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          respBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
       */
      public Builder mergeResp(com.gitchat.netty.chat.ChatInfo.Response value) {
        if (respBuilder_ == null) {
          if (dataCase_ == 4 &&
              data_ != com.gitchat.netty.chat.ChatInfo.Response.getDefaultInstance()) {
            data_ = com.gitchat.netty.chat.ChatInfo.Response.newBuilder((com.gitchat.netty.chat.ChatInfo.Response) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 4) {
            respBuilder_.mergeFrom(value);
          }
          respBuilder_.setMessage(value);
        }
        dataCase_ = 4;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
       */
      public Builder clearResp() {
        if (respBuilder_ == null) {
          if (dataCase_ == 4) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 4) {
            dataCase_ = 0;
            data_ = null;
          }
          respBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.Response.Builder getRespBuilder() {
        return getRespFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.ResponseOrBuilder getRespOrBuilder() {
        if ((dataCase_ == 4) && (respBuilder_ != null)) {
          return respBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 4) {
            return (com.gitchat.netty.chat.ChatInfo.Response) data_;
          }
          return com.gitchat.netty.chat.ChatInfo.Response.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Response resp = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.Response, com.gitchat.netty.chat.ChatInfo.Response.Builder, com.gitchat.netty.chat.ChatInfo.ResponseOrBuilder> 
          getRespFieldBuilder() {
        if (respBuilder_ == null) {
          if (!(dataCase_ == 4)) {
            data_ = com.gitchat.netty.chat.ChatInfo.Response.getDefaultInstance();
          }
          respBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.Response, com.gitchat.netty.chat.ChatInfo.Response.Builder, com.gitchat.netty.chat.ChatInfo.ResponseOrBuilder>(
                  (com.gitchat.netty.chat.ChatInfo.Response) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 4;
        onChanged();;
        return respBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.Notification, com.gitchat.netty.chat.ChatInfo.Notification.Builder, com.gitchat.netty.chat.ChatInfo.NotificationOrBuilder> notifiBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
       */
      public boolean hasNotifi() {
        return dataCase_ == 5;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.Notification getNotifi() {
        if (notifiBuilder_ == null) {
          if (dataCase_ == 5) {
            return (com.gitchat.netty.chat.ChatInfo.Notification) data_;
          }
          return com.gitchat.netty.chat.ChatInfo.Notification.getDefaultInstance();
        } else {
          if (dataCase_ == 5) {
            return notifiBuilder_.getMessage();
          }
          return com.gitchat.netty.chat.ChatInfo.Notification.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
       */
      public Builder setNotifi(com.gitchat.netty.chat.ChatInfo.Notification value) {
        if (notifiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          notifiBuilder_.setMessage(value);
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
       */
      public Builder setNotifi(
          com.gitchat.netty.chat.ChatInfo.Notification.Builder builderForValue) {
        if (notifiBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          notifiBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
       */
      public Builder mergeNotifi(com.gitchat.netty.chat.ChatInfo.Notification value) {
        if (notifiBuilder_ == null) {
          if (dataCase_ == 5 &&
              data_ != com.gitchat.netty.chat.ChatInfo.Notification.getDefaultInstance()) {
            data_ = com.gitchat.netty.chat.ChatInfo.Notification.newBuilder((com.gitchat.netty.chat.ChatInfo.Notification) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 5) {
            notifiBuilder_.mergeFrom(value);
          }
          notifiBuilder_.setMessage(value);
        }
        dataCase_ = 5;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
       */
      public Builder clearNotifi() {
        if (notifiBuilder_ == null) {
          if (dataCase_ == 5) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 5) {
            dataCase_ = 0;
            data_ = null;
          }
          notifiBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.Notification.Builder getNotifiBuilder() {
        return getNotifiFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.NotificationOrBuilder getNotifiOrBuilder() {
        if ((dataCase_ == 5) && (notifiBuilder_ != null)) {
          return notifiBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 5) {
            return (com.gitchat.netty.chat.ChatInfo.Notification) data_;
          }
          return com.gitchat.netty.chat.ChatInfo.Notification.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.Notification notifi = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.Notification, com.gitchat.netty.chat.ChatInfo.Notification.Builder, com.gitchat.netty.chat.ChatInfo.NotificationOrBuilder> 
          getNotifiFieldBuilder() {
        if (notifiBuilder_ == null) {
          if (!(dataCase_ == 5)) {
            data_ = com.gitchat.netty.chat.ChatInfo.Notification.getDefaultInstance();
          }
          notifiBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.Notification, com.gitchat.netty.chat.ChatInfo.Notification.Builder, com.gitchat.netty.chat.ChatInfo.NotificationOrBuilder>(
                  (com.gitchat.netty.chat.ChatInfo.Notification) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 5;
        onChanged();;
        return notifiBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.gitchat.netty.protobuf.Chat)
    }

    // @@protoc_insertion_point(class_scope:com.gitchat.netty.protobuf.Chat)
    private static final com.gitchat.netty.chat.ChatInfo.Chat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.gitchat.netty.chat.ChatInfo.Chat();
    }

    public static com.gitchat.netty.chat.ChatInfo.Chat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Chat>
        PARSER = new com.google.protobuf.AbstractParser<Chat>() {
      @java.lang.Override
      public Chat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Chat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Chat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Chat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.gitchat.netty.chat.ChatInfo.Chat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.gitchat.netty.protobuf.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
     */
    boolean hasLogin();
    /**
     * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
     */
    com.gitchat.netty.chat.ChatInfo.LoginRequest getLogin();
    /**
     * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
     */
    com.gitchat.netty.chat.ChatInfo.LoginRequestOrBuilder getLoginOrBuilder();

    /**
     * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
     */
    boolean hasSingleChat();
    /**
     * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
     */
    com.gitchat.netty.chat.ChatInfo.SingleChat getSingleChat();
    /**
     * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
     */
    com.gitchat.netty.chat.ChatInfo.SingleChatOrBuilder getSingleChatOrBuilder();

    /**
     * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
     */
    boolean hasGroupChat();
    /**
     * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
     */
    com.gitchat.netty.chat.ChatInfo.GroupChat getGroupChat();
    /**
     * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
     */
    com.gitchat.netty.chat.ChatInfo.GroupChatOrBuilder getGroupChatOrBuilder();

    public com.gitchat.netty.chat.ChatInfo.Request.ReqCase getReqCase();
  }
  /**
   * <pre>
   * 请求消息
   * </pre>
   *
   * Protobuf type {@code com.gitchat.netty.protobuf.Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.gitchat.netty.protobuf.Request)
      RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Request() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.gitchat.netty.chat.ChatInfo.LoginRequest.Builder subBuilder = null;
              if (reqCase_ == 1) {
                subBuilder = ((com.gitchat.netty.chat.ChatInfo.LoginRequest) req_).toBuilder();
              }
              req_ =
                  input.readMessage(com.gitchat.netty.chat.ChatInfo.LoginRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.gitchat.netty.chat.ChatInfo.LoginRequest) req_);
                req_ = subBuilder.buildPartial();
              }
              reqCase_ = 1;
              break;
            }
            case 18: {
              com.gitchat.netty.chat.ChatInfo.SingleChat.Builder subBuilder = null;
              if (reqCase_ == 2) {
                subBuilder = ((com.gitchat.netty.chat.ChatInfo.SingleChat) req_).toBuilder();
              }
              req_ =
                  input.readMessage(com.gitchat.netty.chat.ChatInfo.SingleChat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.gitchat.netty.chat.ChatInfo.SingleChat) req_);
                req_ = subBuilder.buildPartial();
              }
              reqCase_ = 2;
              break;
            }
            case 26: {
              com.gitchat.netty.chat.ChatInfo.GroupChat.Builder subBuilder = null;
              if (reqCase_ == 3) {
                subBuilder = ((com.gitchat.netty.chat.ChatInfo.GroupChat) req_).toBuilder();
              }
              req_ =
                  input.readMessage(com.gitchat.netty.chat.ChatInfo.GroupChat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.gitchat.netty.chat.ChatInfo.GroupChat) req_);
                req_ = subBuilder.buildPartial();
              }
              reqCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gitchat.netty.chat.ChatInfo.Request.class, com.gitchat.netty.chat.ChatInfo.Request.Builder.class);
    }

    private int reqCase_ = 0;
    private java.lang.Object req_;
    public enum ReqCase
        implements com.google.protobuf.Internal.EnumLite {
      LOGIN(1),
      SINGLE_CHAT(2),
      GROUP_CHAT(3),
      REQ_NOT_SET(0);
      private final int value;
      private ReqCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ReqCase valueOf(int value) {
        return forNumber(value);
      }

      public static ReqCase forNumber(int value) {
        switch (value) {
          case 1: return LOGIN;
          case 2: return SINGLE_CHAT;
          case 3: return GROUP_CHAT;
          case 0: return REQ_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ReqCase
    getReqCase() {
      return ReqCase.forNumber(
          reqCase_);
    }

    public static final int LOGIN_FIELD_NUMBER = 1;
    /**
     * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
     */
    public boolean hasLogin() {
      return reqCase_ == 1;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.LoginRequest getLogin() {
      if (reqCase_ == 1) {
         return (com.gitchat.netty.chat.ChatInfo.LoginRequest) req_;
      }
      return com.gitchat.netty.chat.ChatInfo.LoginRequest.getDefaultInstance();
    }
    /**
     * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.LoginRequestOrBuilder getLoginOrBuilder() {
      if (reqCase_ == 1) {
         return (com.gitchat.netty.chat.ChatInfo.LoginRequest) req_;
      }
      return com.gitchat.netty.chat.ChatInfo.LoginRequest.getDefaultInstance();
    }

    public static final int SINGLE_CHAT_FIELD_NUMBER = 2;
    /**
     * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
     */
    public boolean hasSingleChat() {
      return reqCase_ == 2;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.SingleChat getSingleChat() {
      if (reqCase_ == 2) {
         return (com.gitchat.netty.chat.ChatInfo.SingleChat) req_;
      }
      return com.gitchat.netty.chat.ChatInfo.SingleChat.getDefaultInstance();
    }
    /**
     * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.SingleChatOrBuilder getSingleChatOrBuilder() {
      if (reqCase_ == 2) {
         return (com.gitchat.netty.chat.ChatInfo.SingleChat) req_;
      }
      return com.gitchat.netty.chat.ChatInfo.SingleChat.getDefaultInstance();
    }

    public static final int GROUP_CHAT_FIELD_NUMBER = 3;
    /**
     * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
     */
    public boolean hasGroupChat() {
      return reqCase_ == 3;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.GroupChat getGroupChat() {
      if (reqCase_ == 3) {
         return (com.gitchat.netty.chat.ChatInfo.GroupChat) req_;
      }
      return com.gitchat.netty.chat.ChatInfo.GroupChat.getDefaultInstance();
    }
    /**
     * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.GroupChatOrBuilder getGroupChatOrBuilder() {
      if (reqCase_ == 3) {
         return (com.gitchat.netty.chat.ChatInfo.GroupChat) req_;
      }
      return com.gitchat.netty.chat.ChatInfo.GroupChat.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (reqCase_ == 1) {
        output.writeMessage(1, (com.gitchat.netty.chat.ChatInfo.LoginRequest) req_);
      }
      if (reqCase_ == 2) {
        output.writeMessage(2, (com.gitchat.netty.chat.ChatInfo.SingleChat) req_);
      }
      if (reqCase_ == 3) {
        output.writeMessage(3, (com.gitchat.netty.chat.ChatInfo.GroupChat) req_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (reqCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.gitchat.netty.chat.ChatInfo.LoginRequest) req_);
      }
      if (reqCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.gitchat.netty.chat.ChatInfo.SingleChat) req_);
      }
      if (reqCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.gitchat.netty.chat.ChatInfo.GroupChat) req_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.gitchat.netty.chat.ChatInfo.Request)) {
        return super.equals(obj);
      }
      com.gitchat.netty.chat.ChatInfo.Request other = (com.gitchat.netty.chat.ChatInfo.Request) obj;

      boolean result = true;
      result = result && getReqCase().equals(
          other.getReqCase());
      if (!result) return false;
      switch (reqCase_) {
        case 1:
          result = result && getLogin()
              .equals(other.getLogin());
          break;
        case 2:
          result = result && getSingleChat()
              .equals(other.getSingleChat());
          break;
        case 3:
          result = result && getGroupChat()
              .equals(other.getGroupChat());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (reqCase_) {
        case 1:
          hash = (37 * hash) + LOGIN_FIELD_NUMBER;
          hash = (53 * hash) + getLogin().hashCode();
          break;
        case 2:
          hash = (37 * hash) + SINGLE_CHAT_FIELD_NUMBER;
          hash = (53 * hash) + getSingleChat().hashCode();
          break;
        case 3:
          hash = (37 * hash) + GROUP_CHAT_FIELD_NUMBER;
          hash = (53 * hash) + getGroupChat().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.gitchat.netty.chat.ChatInfo.Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.gitchat.netty.chat.ChatInfo.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 请求消息
     * </pre>
     *
     * Protobuf type {@code com.gitchat.netty.protobuf.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.gitchat.netty.protobuf.Request)
        com.gitchat.netty.chat.ChatInfo.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.gitchat.netty.chat.ChatInfo.Request.class, com.gitchat.netty.chat.ChatInfo.Request.Builder.class);
      }

      // Construct using com.gitchat.netty.chat.ChatInfo.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        reqCase_ = 0;
        req_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Request_descriptor;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Request getDefaultInstanceForType() {
        return com.gitchat.netty.chat.ChatInfo.Request.getDefaultInstance();
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Request build() {
        com.gitchat.netty.chat.ChatInfo.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Request buildPartial() {
        com.gitchat.netty.chat.ChatInfo.Request result = new com.gitchat.netty.chat.ChatInfo.Request(this);
        if (reqCase_ == 1) {
          if (loginBuilder_ == null) {
            result.req_ = req_;
          } else {
            result.req_ = loginBuilder_.build();
          }
        }
        if (reqCase_ == 2) {
          if (singleChatBuilder_ == null) {
            result.req_ = req_;
          } else {
            result.req_ = singleChatBuilder_.build();
          }
        }
        if (reqCase_ == 3) {
          if (groupChatBuilder_ == null) {
            result.req_ = req_;
          } else {
            result.req_ = groupChatBuilder_.build();
          }
        }
        result.reqCase_ = reqCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gitchat.netty.chat.ChatInfo.Request) {
          return mergeFrom((com.gitchat.netty.chat.ChatInfo.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.gitchat.netty.chat.ChatInfo.Request other) {
        if (other == com.gitchat.netty.chat.ChatInfo.Request.getDefaultInstance()) return this;
        switch (other.getReqCase()) {
          case LOGIN: {
            mergeLogin(other.getLogin());
            break;
          }
          case SINGLE_CHAT: {
            mergeSingleChat(other.getSingleChat());
            break;
          }
          case GROUP_CHAT: {
            mergeGroupChat(other.getGroupChat());
            break;
          }
          case REQ_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.gitchat.netty.chat.ChatInfo.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.gitchat.netty.chat.ChatInfo.Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int reqCase_ = 0;
      private java.lang.Object req_;
      public ReqCase
          getReqCase() {
        return ReqCase.forNumber(
            reqCase_);
      }

      public Builder clearReq() {
        reqCase_ = 0;
        req_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.LoginRequest, com.gitchat.netty.chat.ChatInfo.LoginRequest.Builder, com.gitchat.netty.chat.ChatInfo.LoginRequestOrBuilder> loginBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
       */
      public boolean hasLogin() {
        return reqCase_ == 1;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.LoginRequest getLogin() {
        if (loginBuilder_ == null) {
          if (reqCase_ == 1) {
            return (com.gitchat.netty.chat.ChatInfo.LoginRequest) req_;
          }
          return com.gitchat.netty.chat.ChatInfo.LoginRequest.getDefaultInstance();
        } else {
          if (reqCase_ == 1) {
            return loginBuilder_.getMessage();
          }
          return com.gitchat.netty.chat.ChatInfo.LoginRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
       */
      public Builder setLogin(com.gitchat.netty.chat.ChatInfo.LoginRequest value) {
        if (loginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          req_ = value;
          onChanged();
        } else {
          loginBuilder_.setMessage(value);
        }
        reqCase_ = 1;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
       */
      public Builder setLogin(
          com.gitchat.netty.chat.ChatInfo.LoginRequest.Builder builderForValue) {
        if (loginBuilder_ == null) {
          req_ = builderForValue.build();
          onChanged();
        } else {
          loginBuilder_.setMessage(builderForValue.build());
        }
        reqCase_ = 1;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
       */
      public Builder mergeLogin(com.gitchat.netty.chat.ChatInfo.LoginRequest value) {
        if (loginBuilder_ == null) {
          if (reqCase_ == 1 &&
              req_ != com.gitchat.netty.chat.ChatInfo.LoginRequest.getDefaultInstance()) {
            req_ = com.gitchat.netty.chat.ChatInfo.LoginRequest.newBuilder((com.gitchat.netty.chat.ChatInfo.LoginRequest) req_)
                .mergeFrom(value).buildPartial();
          } else {
            req_ = value;
          }
          onChanged();
        } else {
          if (reqCase_ == 1) {
            loginBuilder_.mergeFrom(value);
          }
          loginBuilder_.setMessage(value);
        }
        reqCase_ = 1;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
       */
      public Builder clearLogin() {
        if (loginBuilder_ == null) {
          if (reqCase_ == 1) {
            reqCase_ = 0;
            req_ = null;
            onChanged();
          }
        } else {
          if (reqCase_ == 1) {
            reqCase_ = 0;
            req_ = null;
          }
          loginBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.LoginRequest.Builder getLoginBuilder() {
        return getLoginFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.LoginRequestOrBuilder getLoginOrBuilder() {
        if ((reqCase_ == 1) && (loginBuilder_ != null)) {
          return loginBuilder_.getMessageOrBuilder();
        } else {
          if (reqCase_ == 1) {
            return (com.gitchat.netty.chat.ChatInfo.LoginRequest) req_;
          }
          return com.gitchat.netty.chat.ChatInfo.LoginRequest.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginRequest login = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.LoginRequest, com.gitchat.netty.chat.ChatInfo.LoginRequest.Builder, com.gitchat.netty.chat.ChatInfo.LoginRequestOrBuilder> 
          getLoginFieldBuilder() {
        if (loginBuilder_ == null) {
          if (!(reqCase_ == 1)) {
            req_ = com.gitchat.netty.chat.ChatInfo.LoginRequest.getDefaultInstance();
          }
          loginBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.LoginRequest, com.gitchat.netty.chat.ChatInfo.LoginRequest.Builder, com.gitchat.netty.chat.ChatInfo.LoginRequestOrBuilder>(
                  (com.gitchat.netty.chat.ChatInfo.LoginRequest) req_,
                  getParentForChildren(),
                  isClean());
          req_ = null;
        }
        reqCase_ = 1;
        onChanged();;
        return loginBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.SingleChat, com.gitchat.netty.chat.ChatInfo.SingleChat.Builder, com.gitchat.netty.chat.ChatInfo.SingleChatOrBuilder> singleChatBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
       */
      public boolean hasSingleChat() {
        return reqCase_ == 2;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.SingleChat getSingleChat() {
        if (singleChatBuilder_ == null) {
          if (reqCase_ == 2) {
            return (com.gitchat.netty.chat.ChatInfo.SingleChat) req_;
          }
          return com.gitchat.netty.chat.ChatInfo.SingleChat.getDefaultInstance();
        } else {
          if (reqCase_ == 2) {
            return singleChatBuilder_.getMessage();
          }
          return com.gitchat.netty.chat.ChatInfo.SingleChat.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
       */
      public Builder setSingleChat(com.gitchat.netty.chat.ChatInfo.SingleChat value) {
        if (singleChatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          req_ = value;
          onChanged();
        } else {
          singleChatBuilder_.setMessage(value);
        }
        reqCase_ = 2;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
       */
      public Builder setSingleChat(
          com.gitchat.netty.chat.ChatInfo.SingleChat.Builder builderForValue) {
        if (singleChatBuilder_ == null) {
          req_ = builderForValue.build();
          onChanged();
        } else {
          singleChatBuilder_.setMessage(builderForValue.build());
        }
        reqCase_ = 2;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
       */
      public Builder mergeSingleChat(com.gitchat.netty.chat.ChatInfo.SingleChat value) {
        if (singleChatBuilder_ == null) {
          if (reqCase_ == 2 &&
              req_ != com.gitchat.netty.chat.ChatInfo.SingleChat.getDefaultInstance()) {
            req_ = com.gitchat.netty.chat.ChatInfo.SingleChat.newBuilder((com.gitchat.netty.chat.ChatInfo.SingleChat) req_)
                .mergeFrom(value).buildPartial();
          } else {
            req_ = value;
          }
          onChanged();
        } else {
          if (reqCase_ == 2) {
            singleChatBuilder_.mergeFrom(value);
          }
          singleChatBuilder_.setMessage(value);
        }
        reqCase_ = 2;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
       */
      public Builder clearSingleChat() {
        if (singleChatBuilder_ == null) {
          if (reqCase_ == 2) {
            reqCase_ = 0;
            req_ = null;
            onChanged();
          }
        } else {
          if (reqCase_ == 2) {
            reqCase_ = 0;
            req_ = null;
          }
          singleChatBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.SingleChat.Builder getSingleChatBuilder() {
        return getSingleChatFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.SingleChatOrBuilder getSingleChatOrBuilder() {
        if ((reqCase_ == 2) && (singleChatBuilder_ != null)) {
          return singleChatBuilder_.getMessageOrBuilder();
        } else {
          if (reqCase_ == 2) {
            return (com.gitchat.netty.chat.ChatInfo.SingleChat) req_;
          }
          return com.gitchat.netty.chat.ChatInfo.SingleChat.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.SingleChat single_chat = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.SingleChat, com.gitchat.netty.chat.ChatInfo.SingleChat.Builder, com.gitchat.netty.chat.ChatInfo.SingleChatOrBuilder> 
          getSingleChatFieldBuilder() {
        if (singleChatBuilder_ == null) {
          if (!(reqCase_ == 2)) {
            req_ = com.gitchat.netty.chat.ChatInfo.SingleChat.getDefaultInstance();
          }
          singleChatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.SingleChat, com.gitchat.netty.chat.ChatInfo.SingleChat.Builder, com.gitchat.netty.chat.ChatInfo.SingleChatOrBuilder>(
                  (com.gitchat.netty.chat.ChatInfo.SingleChat) req_,
                  getParentForChildren(),
                  isClean());
          req_ = null;
        }
        reqCase_ = 2;
        onChanged();;
        return singleChatBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.GroupChat, com.gitchat.netty.chat.ChatInfo.GroupChat.Builder, com.gitchat.netty.chat.ChatInfo.GroupChatOrBuilder> groupChatBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
       */
      public boolean hasGroupChat() {
        return reqCase_ == 3;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.GroupChat getGroupChat() {
        if (groupChatBuilder_ == null) {
          if (reqCase_ == 3) {
            return (com.gitchat.netty.chat.ChatInfo.GroupChat) req_;
          }
          return com.gitchat.netty.chat.ChatInfo.GroupChat.getDefaultInstance();
        } else {
          if (reqCase_ == 3) {
            return groupChatBuilder_.getMessage();
          }
          return com.gitchat.netty.chat.ChatInfo.GroupChat.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
       */
      public Builder setGroupChat(com.gitchat.netty.chat.ChatInfo.GroupChat value) {
        if (groupChatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          req_ = value;
          onChanged();
        } else {
          groupChatBuilder_.setMessage(value);
        }
        reqCase_ = 3;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
       */
      public Builder setGroupChat(
          com.gitchat.netty.chat.ChatInfo.GroupChat.Builder builderForValue) {
        if (groupChatBuilder_ == null) {
          req_ = builderForValue.build();
          onChanged();
        } else {
          groupChatBuilder_.setMessage(builderForValue.build());
        }
        reqCase_ = 3;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
       */
      public Builder mergeGroupChat(com.gitchat.netty.chat.ChatInfo.GroupChat value) {
        if (groupChatBuilder_ == null) {
          if (reqCase_ == 3 &&
              req_ != com.gitchat.netty.chat.ChatInfo.GroupChat.getDefaultInstance()) {
            req_ = com.gitchat.netty.chat.ChatInfo.GroupChat.newBuilder((com.gitchat.netty.chat.ChatInfo.GroupChat) req_)
                .mergeFrom(value).buildPartial();
          } else {
            req_ = value;
          }
          onChanged();
        } else {
          if (reqCase_ == 3) {
            groupChatBuilder_.mergeFrom(value);
          }
          groupChatBuilder_.setMessage(value);
        }
        reqCase_ = 3;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
       */
      public Builder clearGroupChat() {
        if (groupChatBuilder_ == null) {
          if (reqCase_ == 3) {
            reqCase_ = 0;
            req_ = null;
            onChanged();
          }
        } else {
          if (reqCase_ == 3) {
            reqCase_ = 0;
            req_ = null;
          }
          groupChatBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.GroupChat.Builder getGroupChatBuilder() {
        return getGroupChatFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.GroupChatOrBuilder getGroupChatOrBuilder() {
        if ((reqCase_ == 3) && (groupChatBuilder_ != null)) {
          return groupChatBuilder_.getMessageOrBuilder();
        } else {
          if (reqCase_ == 3) {
            return (com.gitchat.netty.chat.ChatInfo.GroupChat) req_;
          }
          return com.gitchat.netty.chat.ChatInfo.GroupChat.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.GroupChat group_chat = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.GroupChat, com.gitchat.netty.chat.ChatInfo.GroupChat.Builder, com.gitchat.netty.chat.ChatInfo.GroupChatOrBuilder> 
          getGroupChatFieldBuilder() {
        if (groupChatBuilder_ == null) {
          if (!(reqCase_ == 3)) {
            req_ = com.gitchat.netty.chat.ChatInfo.GroupChat.getDefaultInstance();
          }
          groupChatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.GroupChat, com.gitchat.netty.chat.ChatInfo.GroupChat.Builder, com.gitchat.netty.chat.ChatInfo.GroupChatOrBuilder>(
                  (com.gitchat.netty.chat.ChatInfo.GroupChat) req_,
                  getParentForChildren(),
                  isClean());
          req_ = null;
        }
        reqCase_ = 3;
        onChanged();;
        return groupChatBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.gitchat.netty.protobuf.Request)
    }

    // @@protoc_insertion_point(class_scope:com.gitchat.netty.protobuf.Request)
    private static final com.gitchat.netty.chat.ChatInfo.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.gitchat.netty.chat.ChatInfo.Request();
    }

    public static com.gitchat.netty.chat.ChatInfo.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      @java.lang.Override
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.gitchat.netty.chat.ChatInfo.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.gitchat.netty.protobuf.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 code = 1;</code>
     */
    int getCode();

    /**
     * <code>string msg = 2;</code>
     */
    java.lang.String getMsg();
    /**
     * <code>string msg = 2;</code>
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    /**
     * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
     */
    boolean hasLoginResponse();
    /**
     * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
     */
    com.gitchat.netty.chat.ChatInfo.LoginResponse getLoginResponse();
    /**
     * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
     */
    com.gitchat.netty.chat.ChatInfo.LoginResponseOrBuilder getLoginResponseOrBuilder();

    public com.gitchat.netty.chat.ChatInfo.Response.DataCase getDataCase();
  }
  /**
   * <pre>
   * 响应消息
   * </pre>
   *
   * Protobuf type {@code com.gitchat.netty.protobuf.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.gitchat.netty.protobuf.Response)
      ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      code_ = 0;
      msg_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              code_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              msg_ = s;
              break;
            }
            case 26: {
              com.gitchat.netty.chat.ChatInfo.LoginResponse.Builder subBuilder = null;
              if (dataCase_ == 3) {
                subBuilder = ((com.gitchat.netty.chat.ChatInfo.LoginResponse) data_).toBuilder();
              }
              data_ =
                  input.readMessage(com.gitchat.netty.chat.ChatInfo.LoginResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.gitchat.netty.chat.ChatInfo.LoginResponse) data_);
                data_ = subBuilder.buildPartial();
              }
              dataCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gitchat.netty.chat.ChatInfo.Response.class, com.gitchat.netty.chat.ChatInfo.Response.Builder.class);
    }

    private int dataCase_ = 0;
    private java.lang.Object data_;
    public enum DataCase
        implements com.google.protobuf.Internal.EnumLite {
      LOGIN_RESPONSE(3),
      DATA_NOT_SET(0);
      private final int value;
      private DataCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DataCase valueOf(int value) {
        return forNumber(value);
      }

      public static DataCase forNumber(int value) {
        switch (value) {
          case 3: return LOGIN_RESPONSE;
          case 0: return DATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DataCase
    getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    public static final int MSG_FIELD_NUMBER = 2;
    private volatile java.lang.Object msg_;
    /**
     * <code>string msg = 2;</code>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        msg_ = s;
        return s;
      }
    }
    /**
     * <code>string msg = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOGIN_RESPONSE_FIELD_NUMBER = 3;
    /**
     * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
     */
    public boolean hasLoginResponse() {
      return dataCase_ == 3;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.LoginResponse getLoginResponse() {
      if (dataCase_ == 3) {
         return (com.gitchat.netty.chat.ChatInfo.LoginResponse) data_;
      }
      return com.gitchat.netty.chat.ChatInfo.LoginResponse.getDefaultInstance();
    }
    /**
     * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.LoginResponseOrBuilder getLoginResponseOrBuilder() {
      if (dataCase_ == 3) {
         return (com.gitchat.netty.chat.ChatInfo.LoginResponse) data_;
      }
      return com.gitchat.netty.chat.ChatInfo.LoginResponse.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != 0) {
        output.writeInt32(1, code_);
      }
      if (!getMsgBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, msg_);
      }
      if (dataCase_ == 3) {
        output.writeMessage(3, (com.gitchat.netty.chat.ChatInfo.LoginResponse) data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      if (!getMsgBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, msg_);
      }
      if (dataCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.gitchat.netty.chat.ChatInfo.LoginResponse) data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.gitchat.netty.chat.ChatInfo.Response)) {
        return super.equals(obj);
      }
      com.gitchat.netty.chat.ChatInfo.Response other = (com.gitchat.netty.chat.ChatInfo.Response) obj;

      boolean result = true;
      result = result && (getCode()
          == other.getCode());
      result = result && getMsg()
          .equals(other.getMsg());
      result = result && getDataCase().equals(
          other.getDataCase());
      if (!result) return false;
      switch (dataCase_) {
        case 3:
          result = result && getLoginResponse()
              .equals(other.getLoginResponse());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode();
      hash = (37 * hash) + MSG_FIELD_NUMBER;
      hash = (53 * hash) + getMsg().hashCode();
      switch (dataCase_) {
        case 3:
          hash = (37 * hash) + LOGIN_RESPONSE_FIELD_NUMBER;
          hash = (53 * hash) + getLoginResponse().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.gitchat.netty.chat.ChatInfo.Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.gitchat.netty.chat.ChatInfo.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 响应消息
     * </pre>
     *
     * Protobuf type {@code com.gitchat.netty.protobuf.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.gitchat.netty.protobuf.Response)
        com.gitchat.netty.chat.ChatInfo.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.gitchat.netty.chat.ChatInfo.Response.class, com.gitchat.netty.chat.ChatInfo.Response.Builder.class);
      }

      // Construct using com.gitchat.netty.chat.ChatInfo.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        code_ = 0;

        msg_ = "";

        dataCase_ = 0;
        data_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Response_descriptor;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Response getDefaultInstanceForType() {
        return com.gitchat.netty.chat.ChatInfo.Response.getDefaultInstance();
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Response build() {
        com.gitchat.netty.chat.ChatInfo.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Response buildPartial() {
        com.gitchat.netty.chat.ChatInfo.Response result = new com.gitchat.netty.chat.ChatInfo.Response(this);
        result.code_ = code_;
        result.msg_ = msg_;
        if (dataCase_ == 3) {
          if (loginResponseBuilder_ == null) {
            result.data_ = data_;
          } else {
            result.data_ = loginResponseBuilder_.build();
          }
        }
        result.dataCase_ = dataCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gitchat.netty.chat.ChatInfo.Response) {
          return mergeFrom((com.gitchat.netty.chat.ChatInfo.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.gitchat.netty.chat.ChatInfo.Response other) {
        if (other == com.gitchat.netty.chat.ChatInfo.Response.getDefaultInstance()) return this;
        if (other.getCode() != 0) {
          setCode(other.getCode());
        }
        if (!other.getMsg().isEmpty()) {
          msg_ = other.msg_;
          onChanged();
        }
        switch (other.getDataCase()) {
          case LOGIN_RESPONSE: {
            mergeLoginResponse(other.getLoginResponse());
            break;
          }
          case DATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.gitchat.netty.chat.ChatInfo.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.gitchat.netty.chat.ChatInfo.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int dataCase_ = 0;
      private java.lang.Object data_;
      public DataCase
          getDataCase() {
        return DataCase.forNumber(
            dataCase_);
      }

      public Builder clearData() {
        dataCase_ = 0;
        data_ = null;
        onChanged();
        return this;
      }


      private int code_ ;
      /**
       * <code>int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 code = 1;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object msg_ = "";
      /**
       * <code>string msg = 2;</code>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string msg = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string msg = 2;</code>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string msg = 2;</code>
       */
      public Builder clearMsg() {
        
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>string msg = 2;</code>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        msg_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.LoginResponse, com.gitchat.netty.chat.ChatInfo.LoginResponse.Builder, com.gitchat.netty.chat.ChatInfo.LoginResponseOrBuilder> loginResponseBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
       */
      public boolean hasLoginResponse() {
        return dataCase_ == 3;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.LoginResponse getLoginResponse() {
        if (loginResponseBuilder_ == null) {
          if (dataCase_ == 3) {
            return (com.gitchat.netty.chat.ChatInfo.LoginResponse) data_;
          }
          return com.gitchat.netty.chat.ChatInfo.LoginResponse.getDefaultInstance();
        } else {
          if (dataCase_ == 3) {
            return loginResponseBuilder_.getMessage();
          }
          return com.gitchat.netty.chat.ChatInfo.LoginResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
       */
      public Builder setLoginResponse(com.gitchat.netty.chat.ChatInfo.LoginResponse value) {
        if (loginResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          loginResponseBuilder_.setMessage(value);
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
       */
      public Builder setLoginResponse(
          com.gitchat.netty.chat.ChatInfo.LoginResponse.Builder builderForValue) {
        if (loginResponseBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          loginResponseBuilder_.setMessage(builderForValue.build());
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
       */
      public Builder mergeLoginResponse(com.gitchat.netty.chat.ChatInfo.LoginResponse value) {
        if (loginResponseBuilder_ == null) {
          if (dataCase_ == 3 &&
              data_ != com.gitchat.netty.chat.ChatInfo.LoginResponse.getDefaultInstance()) {
            data_ = com.gitchat.netty.chat.ChatInfo.LoginResponse.newBuilder((com.gitchat.netty.chat.ChatInfo.LoginResponse) data_)
                .mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          if (dataCase_ == 3) {
            loginResponseBuilder_.mergeFrom(value);
          }
          loginResponseBuilder_.setMessage(value);
        }
        dataCase_ = 3;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
       */
      public Builder clearLoginResponse() {
        if (loginResponseBuilder_ == null) {
          if (dataCase_ == 3) {
            dataCase_ = 0;
            data_ = null;
            onChanged();
          }
        } else {
          if (dataCase_ == 3) {
            dataCase_ = 0;
            data_ = null;
          }
          loginResponseBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.LoginResponse.Builder getLoginResponseBuilder() {
        return getLoginResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.LoginResponseOrBuilder getLoginResponseOrBuilder() {
        if ((dataCase_ == 3) && (loginResponseBuilder_ != null)) {
          return loginResponseBuilder_.getMessageOrBuilder();
        } else {
          if (dataCase_ == 3) {
            return (com.gitchat.netty.chat.ChatInfo.LoginResponse) data_;
          }
          return com.gitchat.netty.chat.ChatInfo.LoginResponse.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.LoginResponse login_response = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.LoginResponse, com.gitchat.netty.chat.ChatInfo.LoginResponse.Builder, com.gitchat.netty.chat.ChatInfo.LoginResponseOrBuilder> 
          getLoginResponseFieldBuilder() {
        if (loginResponseBuilder_ == null) {
          if (!(dataCase_ == 3)) {
            data_ = com.gitchat.netty.chat.ChatInfo.LoginResponse.getDefaultInstance();
          }
          loginResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.LoginResponse, com.gitchat.netty.chat.ChatInfo.LoginResponse.Builder, com.gitchat.netty.chat.ChatInfo.LoginResponseOrBuilder>(
                  (com.gitchat.netty.chat.ChatInfo.LoginResponse) data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        dataCase_ = 3;
        onChanged();;
        return loginResponseBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.gitchat.netty.protobuf.Response)
    }

    // @@protoc_insertion_point(class_scope:com.gitchat.netty.protobuf.Response)
    private static final com.gitchat.netty.chat.ChatInfo.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.gitchat.netty.chat.ChatInfo.Response();
    }

    public static com.gitchat.netty.chat.ChatInfo.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      @java.lang.Override
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.gitchat.netty.chat.ChatInfo.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.gitchat.netty.protobuf.User)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string user_id = 1;</code>
     */
    java.lang.String getUserId();
    /**
     * <code>string user_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <code>string username = 2;</code>
     */
    java.lang.String getUsername();
    /**
     * <code>string username = 2;</code>
     */
    com.google.protobuf.ByteString
        getUsernameBytes();

    /**
     * <code>string password = 3;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>string password = 3;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * <pre>
   * 用户信息
   * </pre>
   *
   * Protobuf type {@code com.gitchat.netty.protobuf.User}
   */
  public  static final class User extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.gitchat.netty.protobuf.User)
      UserOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use User.newBuilder() to construct.
    private User(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private User() {
      userId_ = "";
      username_ = "";
      password_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private User(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              userId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              username_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              password_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_User_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_User_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gitchat.netty.chat.ChatInfo.User.class, com.gitchat.netty.chat.ChatInfo.User.Builder.class);
    }

    public static final int USER_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object userId_;
    /**
     * <code>string user_id = 1;</code>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userId_ = s;
        return s;
      }
    }
    /**
     * <code>string user_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USERNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object username_;
    /**
     * <code>string username = 2;</code>
     */
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        username_ = s;
        return s;
      }
    }
    /**
     * <code>string username = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 3;
    private volatile java.lang.Object password_;
    /**
     * <code>string password = 3;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        password_ = s;
        return s;
      }
    }
    /**
     * <code>string password = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUserIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, userId_);
      }
      if (!getUsernameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, username_);
      }
      if (!getPasswordBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, password_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUserIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, userId_);
      }
      if (!getUsernameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, username_);
      }
      if (!getPasswordBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, password_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.gitchat.netty.chat.ChatInfo.User)) {
        return super.equals(obj);
      }
      com.gitchat.netty.chat.ChatInfo.User other = (com.gitchat.netty.chat.ChatInfo.User) obj;

      boolean result = true;
      result = result && getUserId()
          .equals(other.getUserId());
      result = result && getUsername()
          .equals(other.getUsername());
      result = result && getPassword()
          .equals(other.getPassword());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId().hashCode();
      hash = (37 * hash) + USERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getUsername().hashCode();
      hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getPassword().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.gitchat.netty.chat.ChatInfo.User parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.User parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.gitchat.netty.chat.ChatInfo.User prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 用户信息
     * </pre>
     *
     * Protobuf type {@code com.gitchat.netty.protobuf.User}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.gitchat.netty.protobuf.User)
        com.gitchat.netty.chat.ChatInfo.UserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_User_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.gitchat.netty.chat.ChatInfo.User.class, com.gitchat.netty.chat.ChatInfo.User.Builder.class);
      }

      // Construct using com.gitchat.netty.chat.ChatInfo.User.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        userId_ = "";

        username_ = "";

        password_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_User_descriptor;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.User getDefaultInstanceForType() {
        return com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance();
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.User build() {
        com.gitchat.netty.chat.ChatInfo.User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.User buildPartial() {
        com.gitchat.netty.chat.ChatInfo.User result = new com.gitchat.netty.chat.ChatInfo.User(this);
        result.userId_ = userId_;
        result.username_ = username_;
        result.password_ = password_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gitchat.netty.chat.ChatInfo.User) {
          return mergeFrom((com.gitchat.netty.chat.ChatInfo.User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.gitchat.netty.chat.ChatInfo.User other) {
        if (other == com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance()) return this;
        if (!other.getUserId().isEmpty()) {
          userId_ = other.userId_;
          onChanged();
        }
        if (!other.getUsername().isEmpty()) {
          username_ = other.username_;
          onChanged();
        }
        if (!other.getPassword().isEmpty()) {
          password_ = other.password_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.gitchat.netty.chat.ChatInfo.User parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.gitchat.netty.chat.ChatInfo.User) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object userId_ = "";
      /**
       * <code>string user_id = 1;</code>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string user_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string user_id = 1;</code>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string user_id = 1;</code>
       */
      public Builder clearUserId() {
        
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>string user_id = 1;</code>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        userId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object username_ = "";
      /**
       * <code>string username = 2;</code>
       */
      public java.lang.String getUsername() {
        java.lang.Object ref = username_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          username_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string username = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        java.lang.Object ref = username_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string username = 2;</code>
       */
      public Builder setUsername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        username_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string username = 2;</code>
       */
      public Builder clearUsername() {
        
        username_ = getDefaultInstance().getUsername();
        onChanged();
        return this;
      }
      /**
       * <code>string username = 2;</code>
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        username_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>string password = 3;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string password = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string password = 3;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string password = 3;</code>
       */
      public Builder clearPassword() {
        
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>string password = 3;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        password_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.gitchat.netty.protobuf.User)
    }

    // @@protoc_insertion_point(class_scope:com.gitchat.netty.protobuf.User)
    private static final com.gitchat.netty.chat.ChatInfo.User DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.gitchat.netty.chat.ChatInfo.User();
    }

    public static com.gitchat.netty.chat.ChatInfo.User getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<User>
        PARSER = new com.google.protobuf.AbstractParser<User>() {
      @java.lang.Override
      public User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new User(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<User> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<User> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.gitchat.netty.chat.ChatInfo.User getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NotificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.gitchat.netty.protobuf.Notification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
     */
    boolean hasWelcome();
    /**
     * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
     */
    com.gitchat.netty.chat.ChatInfo.WelcomeNotification getWelcome();
    /**
     * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
     */
    com.gitchat.netty.chat.ChatInfo.WelcomeNotificationOrBuilder getWelcomeOrBuilder();

    public com.gitchat.netty.chat.ChatInfo.Notification.NotifiCase getNotifiCase();
  }
  /**
   * <pre>
   * 通知消息
   * </pre>
   *
   * Protobuf type {@code com.gitchat.netty.protobuf.Notification}
   */
  public  static final class Notification extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.gitchat.netty.protobuf.Notification)
      NotificationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Notification.newBuilder() to construct.
    private Notification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Notification() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Notification(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.gitchat.netty.chat.ChatInfo.WelcomeNotification.Builder subBuilder = null;
              if (notifiCase_ == 1) {
                subBuilder = ((com.gitchat.netty.chat.ChatInfo.WelcomeNotification) notifi_).toBuilder();
              }
              notifi_ =
                  input.readMessage(com.gitchat.netty.chat.ChatInfo.WelcomeNotification.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.gitchat.netty.chat.ChatInfo.WelcomeNotification) notifi_);
                notifi_ = subBuilder.buildPartial();
              }
              notifiCase_ = 1;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Notification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Notification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gitchat.netty.chat.ChatInfo.Notification.class, com.gitchat.netty.chat.ChatInfo.Notification.Builder.class);
    }

    private int notifiCase_ = 0;
    private java.lang.Object notifi_;
    public enum NotifiCase
        implements com.google.protobuf.Internal.EnumLite {
      WELCOME(1),
      NOTIFI_NOT_SET(0);
      private final int value;
      private NotifiCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NotifiCase valueOf(int value) {
        return forNumber(value);
      }

      public static NotifiCase forNumber(int value) {
        switch (value) {
          case 1: return WELCOME;
          case 0: return NOTIFI_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public NotifiCase
    getNotifiCase() {
      return NotifiCase.forNumber(
          notifiCase_);
    }

    public static final int WELCOME_FIELD_NUMBER = 1;
    /**
     * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
     */
    public boolean hasWelcome() {
      return notifiCase_ == 1;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.WelcomeNotification getWelcome() {
      if (notifiCase_ == 1) {
         return (com.gitchat.netty.chat.ChatInfo.WelcomeNotification) notifi_;
      }
      return com.gitchat.netty.chat.ChatInfo.WelcomeNotification.getDefaultInstance();
    }
    /**
     * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.WelcomeNotificationOrBuilder getWelcomeOrBuilder() {
      if (notifiCase_ == 1) {
         return (com.gitchat.netty.chat.ChatInfo.WelcomeNotification) notifi_;
      }
      return com.gitchat.netty.chat.ChatInfo.WelcomeNotification.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (notifiCase_ == 1) {
        output.writeMessage(1, (com.gitchat.netty.chat.ChatInfo.WelcomeNotification) notifi_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (notifiCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.gitchat.netty.chat.ChatInfo.WelcomeNotification) notifi_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.gitchat.netty.chat.ChatInfo.Notification)) {
        return super.equals(obj);
      }
      com.gitchat.netty.chat.ChatInfo.Notification other = (com.gitchat.netty.chat.ChatInfo.Notification) obj;

      boolean result = true;
      result = result && getNotifiCase().equals(
          other.getNotifiCase());
      if (!result) return false;
      switch (notifiCase_) {
        case 1:
          result = result && getWelcome()
              .equals(other.getWelcome());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (notifiCase_) {
        case 1:
          hash = (37 * hash) + WELCOME_FIELD_NUMBER;
          hash = (53 * hash) + getWelcome().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.gitchat.netty.chat.ChatInfo.Notification parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Notification parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.gitchat.netty.chat.ChatInfo.Notification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 通知消息
     * </pre>
     *
     * Protobuf type {@code com.gitchat.netty.protobuf.Notification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.gitchat.netty.protobuf.Notification)
        com.gitchat.netty.chat.ChatInfo.NotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Notification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Notification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.gitchat.netty.chat.ChatInfo.Notification.class, com.gitchat.netty.chat.ChatInfo.Notification.Builder.class);
      }

      // Construct using com.gitchat.netty.chat.ChatInfo.Notification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        notifiCase_ = 0;
        notifi_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Notification_descriptor;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Notification getDefaultInstanceForType() {
        return com.gitchat.netty.chat.ChatInfo.Notification.getDefaultInstance();
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Notification build() {
        com.gitchat.netty.chat.ChatInfo.Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Notification buildPartial() {
        com.gitchat.netty.chat.ChatInfo.Notification result = new com.gitchat.netty.chat.ChatInfo.Notification(this);
        if (notifiCase_ == 1) {
          if (welcomeBuilder_ == null) {
            result.notifi_ = notifi_;
          } else {
            result.notifi_ = welcomeBuilder_.build();
          }
        }
        result.notifiCase_ = notifiCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gitchat.netty.chat.ChatInfo.Notification) {
          return mergeFrom((com.gitchat.netty.chat.ChatInfo.Notification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.gitchat.netty.chat.ChatInfo.Notification other) {
        if (other == com.gitchat.netty.chat.ChatInfo.Notification.getDefaultInstance()) return this;
        switch (other.getNotifiCase()) {
          case WELCOME: {
            mergeWelcome(other.getWelcome());
            break;
          }
          case NOTIFI_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.gitchat.netty.chat.ChatInfo.Notification parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.gitchat.netty.chat.ChatInfo.Notification) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int notifiCase_ = 0;
      private java.lang.Object notifi_;
      public NotifiCase
          getNotifiCase() {
        return NotifiCase.forNumber(
            notifiCase_);
      }

      public Builder clearNotifi() {
        notifiCase_ = 0;
        notifi_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.WelcomeNotification, com.gitchat.netty.chat.ChatInfo.WelcomeNotification.Builder, com.gitchat.netty.chat.ChatInfo.WelcomeNotificationOrBuilder> welcomeBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
       */
      public boolean hasWelcome() {
        return notifiCase_ == 1;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.WelcomeNotification getWelcome() {
        if (welcomeBuilder_ == null) {
          if (notifiCase_ == 1) {
            return (com.gitchat.netty.chat.ChatInfo.WelcomeNotification) notifi_;
          }
          return com.gitchat.netty.chat.ChatInfo.WelcomeNotification.getDefaultInstance();
        } else {
          if (notifiCase_ == 1) {
            return welcomeBuilder_.getMessage();
          }
          return com.gitchat.netty.chat.ChatInfo.WelcomeNotification.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
       */
      public Builder setWelcome(com.gitchat.netty.chat.ChatInfo.WelcomeNotification value) {
        if (welcomeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          notifi_ = value;
          onChanged();
        } else {
          welcomeBuilder_.setMessage(value);
        }
        notifiCase_ = 1;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
       */
      public Builder setWelcome(
          com.gitchat.netty.chat.ChatInfo.WelcomeNotification.Builder builderForValue) {
        if (welcomeBuilder_ == null) {
          notifi_ = builderForValue.build();
          onChanged();
        } else {
          welcomeBuilder_.setMessage(builderForValue.build());
        }
        notifiCase_ = 1;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
       */
      public Builder mergeWelcome(com.gitchat.netty.chat.ChatInfo.WelcomeNotification value) {
        if (welcomeBuilder_ == null) {
          if (notifiCase_ == 1 &&
              notifi_ != com.gitchat.netty.chat.ChatInfo.WelcomeNotification.getDefaultInstance()) {
            notifi_ = com.gitchat.netty.chat.ChatInfo.WelcomeNotification.newBuilder((com.gitchat.netty.chat.ChatInfo.WelcomeNotification) notifi_)
                .mergeFrom(value).buildPartial();
          } else {
            notifi_ = value;
          }
          onChanged();
        } else {
          if (notifiCase_ == 1) {
            welcomeBuilder_.mergeFrom(value);
          }
          welcomeBuilder_.setMessage(value);
        }
        notifiCase_ = 1;
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
       */
      public Builder clearWelcome() {
        if (welcomeBuilder_ == null) {
          if (notifiCase_ == 1) {
            notifiCase_ = 0;
            notifi_ = null;
            onChanged();
          }
        } else {
          if (notifiCase_ == 1) {
            notifiCase_ = 0;
            notifi_ = null;
          }
          welcomeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.WelcomeNotification.Builder getWelcomeBuilder() {
        return getWelcomeFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.WelcomeNotificationOrBuilder getWelcomeOrBuilder() {
        if ((notifiCase_ == 1) && (welcomeBuilder_ != null)) {
          return welcomeBuilder_.getMessageOrBuilder();
        } else {
          if (notifiCase_ == 1) {
            return (com.gitchat.netty.chat.ChatInfo.WelcomeNotification) notifi_;
          }
          return com.gitchat.netty.chat.ChatInfo.WelcomeNotification.getDefaultInstance();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.WelcomeNotification welcome = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.WelcomeNotification, com.gitchat.netty.chat.ChatInfo.WelcomeNotification.Builder, com.gitchat.netty.chat.ChatInfo.WelcomeNotificationOrBuilder> 
          getWelcomeFieldBuilder() {
        if (welcomeBuilder_ == null) {
          if (!(notifiCase_ == 1)) {
            notifi_ = com.gitchat.netty.chat.ChatInfo.WelcomeNotification.getDefaultInstance();
          }
          welcomeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.WelcomeNotification, com.gitchat.netty.chat.ChatInfo.WelcomeNotification.Builder, com.gitchat.netty.chat.ChatInfo.WelcomeNotificationOrBuilder>(
                  (com.gitchat.netty.chat.ChatInfo.WelcomeNotification) notifi_,
                  getParentForChildren(),
                  isClean());
          notifi_ = null;
        }
        notifiCase_ = 1;
        onChanged();;
        return welcomeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.gitchat.netty.protobuf.Notification)
    }

    // @@protoc_insertion_point(class_scope:com.gitchat.netty.protobuf.Notification)
    private static final com.gitchat.netty.chat.ChatInfo.Notification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.gitchat.netty.chat.ChatInfo.Notification();
    }

    public static com.gitchat.netty.chat.ChatInfo.Notification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Notification>
        PARSER = new com.google.protobuf.AbstractParser<Notification>() {
      @java.lang.Override
      public Notification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Notification(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Notification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Notification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.gitchat.netty.chat.ChatInfo.Notification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WelcomeNotificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.gitchat.netty.protobuf.WelcomeNotification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string text = 1;</code>
     */
    java.lang.String getText();
    /**
     * <code>string text = 1;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();
  }
  /**
   * Protobuf type {@code com.gitchat.netty.protobuf.WelcomeNotification}
   */
  public  static final class WelcomeNotification extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.gitchat.netty.protobuf.WelcomeNotification)
      WelcomeNotificationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WelcomeNotification.newBuilder() to construct.
    private WelcomeNotification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WelcomeNotification() {
      text_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WelcomeNotification(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              text_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_WelcomeNotification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_WelcomeNotification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gitchat.netty.chat.ChatInfo.WelcomeNotification.class, com.gitchat.netty.chat.ChatInfo.WelcomeNotification.Builder.class);
    }

    public static final int TEXT_FIELD_NUMBER = 1;
    private volatile java.lang.Object text_;
    /**
     * <code>string text = 1;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        text_ = s;
        return s;
      }
    }
    /**
     * <code>string text = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTextBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, text_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTextBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, text_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.gitchat.netty.chat.ChatInfo.WelcomeNotification)) {
        return super.equals(obj);
      }
      com.gitchat.netty.chat.ChatInfo.WelcomeNotification other = (com.gitchat.netty.chat.ChatInfo.WelcomeNotification) obj;

      boolean result = true;
      result = result && getText()
          .equals(other.getText());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getText().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.gitchat.netty.chat.ChatInfo.WelcomeNotification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.gitchat.netty.protobuf.WelcomeNotification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.gitchat.netty.protobuf.WelcomeNotification)
        com.gitchat.netty.chat.ChatInfo.WelcomeNotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_WelcomeNotification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_WelcomeNotification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.gitchat.netty.chat.ChatInfo.WelcomeNotification.class, com.gitchat.netty.chat.ChatInfo.WelcomeNotification.Builder.class);
      }

      // Construct using com.gitchat.netty.chat.ChatInfo.WelcomeNotification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        text_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_WelcomeNotification_descriptor;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.WelcomeNotification getDefaultInstanceForType() {
        return com.gitchat.netty.chat.ChatInfo.WelcomeNotification.getDefaultInstance();
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.WelcomeNotification build() {
        com.gitchat.netty.chat.ChatInfo.WelcomeNotification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.WelcomeNotification buildPartial() {
        com.gitchat.netty.chat.ChatInfo.WelcomeNotification result = new com.gitchat.netty.chat.ChatInfo.WelcomeNotification(this);
        result.text_ = text_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gitchat.netty.chat.ChatInfo.WelcomeNotification) {
          return mergeFrom((com.gitchat.netty.chat.ChatInfo.WelcomeNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.gitchat.netty.chat.ChatInfo.WelcomeNotification other) {
        if (other == com.gitchat.netty.chat.ChatInfo.WelcomeNotification.getDefaultInstance()) return this;
        if (!other.getText().isEmpty()) {
          text_ = other.text_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.gitchat.netty.chat.ChatInfo.WelcomeNotification parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.gitchat.netty.chat.ChatInfo.WelcomeNotification) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object text_ = "";
      /**
       * <code>string text = 1;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          text_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string text = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string text = 1;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string text = 1;</code>
       */
      public Builder clearText() {
        
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <code>string text = 1;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        text_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.gitchat.netty.protobuf.WelcomeNotification)
    }

    // @@protoc_insertion_point(class_scope:com.gitchat.netty.protobuf.WelcomeNotification)
    private static final com.gitchat.netty.chat.ChatInfo.WelcomeNotification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.gitchat.netty.chat.ChatInfo.WelcomeNotification();
    }

    public static com.gitchat.netty.chat.ChatInfo.WelcomeNotification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WelcomeNotification>
        PARSER = new com.google.protobuf.AbstractParser<WelcomeNotification>() {
      @java.lang.Override
      public WelcomeNotification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WelcomeNotification(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WelcomeNotification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WelcomeNotification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.gitchat.netty.chat.ChatInfo.WelcomeNotification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.gitchat.netty.protobuf.Command)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * 命令消息
   * </pre>
   *
   * Protobuf type {@code com.gitchat.netty.protobuf.Command}
   */
  public  static final class Command extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.gitchat.netty.protobuf.Command)
      CommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Command.newBuilder() to construct.
    private Command(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Command() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Command(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Command_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Command_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gitchat.netty.chat.ChatInfo.Command.class, com.gitchat.netty.chat.ChatInfo.Command.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.gitchat.netty.chat.ChatInfo.Command)) {
        return super.equals(obj);
      }
      com.gitchat.netty.chat.ChatInfo.Command other = (com.gitchat.netty.chat.ChatInfo.Command) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.gitchat.netty.chat.ChatInfo.Command parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Command parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Command parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Command parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Command parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.Command parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Command parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Command parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Command parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Command parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.Command parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.Command parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.gitchat.netty.chat.ChatInfo.Command prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 命令消息
     * </pre>
     *
     * Protobuf type {@code com.gitchat.netty.protobuf.Command}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.gitchat.netty.protobuf.Command)
        com.gitchat.netty.chat.ChatInfo.CommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Command_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Command_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.gitchat.netty.chat.ChatInfo.Command.class, com.gitchat.netty.chat.ChatInfo.Command.Builder.class);
      }

      // Construct using com.gitchat.netty.chat.ChatInfo.Command.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_Command_descriptor;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Command getDefaultInstanceForType() {
        return com.gitchat.netty.chat.ChatInfo.Command.getDefaultInstance();
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Command build() {
        com.gitchat.netty.chat.ChatInfo.Command result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.Command buildPartial() {
        com.gitchat.netty.chat.ChatInfo.Command result = new com.gitchat.netty.chat.ChatInfo.Command(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gitchat.netty.chat.ChatInfo.Command) {
          return mergeFrom((com.gitchat.netty.chat.ChatInfo.Command)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.gitchat.netty.chat.ChatInfo.Command other) {
        if (other == com.gitchat.netty.chat.ChatInfo.Command.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.gitchat.netty.chat.ChatInfo.Command parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.gitchat.netty.chat.ChatInfo.Command) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.gitchat.netty.protobuf.Command)
    }

    // @@protoc_insertion_point(class_scope:com.gitchat.netty.protobuf.Command)
    private static final com.gitchat.netty.chat.ChatInfo.Command DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.gitchat.netty.chat.ChatInfo.Command();
    }

    public static com.gitchat.netty.chat.ChatInfo.Command getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Command>
        PARSER = new com.google.protobuf.AbstractParser<Command>() {
      @java.lang.Override
      public Command parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Command(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Command> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Command> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.gitchat.netty.chat.ChatInfo.Command getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LoginRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.gitchat.netty.protobuf.LoginRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
     */
    boolean hasLoginUser();
    /**
     * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
     */
    com.gitchat.netty.chat.ChatInfo.User getLoginUser();
    /**
     * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
     */
    com.gitchat.netty.chat.ChatInfo.UserOrBuilder getLoginUserOrBuilder();
  }
  /**
   * Protobuf type {@code com.gitchat.netty.protobuf.LoginRequest}
   */
  public  static final class LoginRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.gitchat.netty.protobuf.LoginRequest)
      LoginRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LoginRequest.newBuilder() to construct.
    private LoginRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LoginRequest() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LoginRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.gitchat.netty.chat.ChatInfo.User.Builder subBuilder = null;
              if (loginUser_ != null) {
                subBuilder = loginUser_.toBuilder();
              }
              loginUser_ = input.readMessage(com.gitchat.netty.chat.ChatInfo.User.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(loginUser_);
                loginUser_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_LoginRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_LoginRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gitchat.netty.chat.ChatInfo.LoginRequest.class, com.gitchat.netty.chat.ChatInfo.LoginRequest.Builder.class);
    }

    public static final int LOGIN_USER_FIELD_NUMBER = 1;
    private com.gitchat.netty.chat.ChatInfo.User loginUser_;
    /**
     * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
     */
    public boolean hasLoginUser() {
      return loginUser_ != null;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.User getLoginUser() {
      return loginUser_ == null ? com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : loginUser_;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.UserOrBuilder getLoginUserOrBuilder() {
      return getLoginUser();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (loginUser_ != null) {
        output.writeMessage(1, getLoginUser());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (loginUser_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLoginUser());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.gitchat.netty.chat.ChatInfo.LoginRequest)) {
        return super.equals(obj);
      }
      com.gitchat.netty.chat.ChatInfo.LoginRequest other = (com.gitchat.netty.chat.ChatInfo.LoginRequest) obj;

      boolean result = true;
      result = result && (hasLoginUser() == other.hasLoginUser());
      if (hasLoginUser()) {
        result = result && getLoginUser()
            .equals(other.getLoginUser());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLoginUser()) {
        hash = (37 * hash) + LOGIN_USER_FIELD_NUMBER;
        hash = (53 * hash) + getLoginUser().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.gitchat.netty.chat.ChatInfo.LoginRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.gitchat.netty.chat.ChatInfo.LoginRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.gitchat.netty.protobuf.LoginRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.gitchat.netty.protobuf.LoginRequest)
        com.gitchat.netty.chat.ChatInfo.LoginRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_LoginRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_LoginRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.gitchat.netty.chat.ChatInfo.LoginRequest.class, com.gitchat.netty.chat.ChatInfo.LoginRequest.Builder.class);
      }

      // Construct using com.gitchat.netty.chat.ChatInfo.LoginRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (loginUserBuilder_ == null) {
          loginUser_ = null;
        } else {
          loginUser_ = null;
          loginUserBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_LoginRequest_descriptor;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.LoginRequest getDefaultInstanceForType() {
        return com.gitchat.netty.chat.ChatInfo.LoginRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.LoginRequest build() {
        com.gitchat.netty.chat.ChatInfo.LoginRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.LoginRequest buildPartial() {
        com.gitchat.netty.chat.ChatInfo.LoginRequest result = new com.gitchat.netty.chat.ChatInfo.LoginRequest(this);
        if (loginUserBuilder_ == null) {
          result.loginUser_ = loginUser_;
        } else {
          result.loginUser_ = loginUserBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gitchat.netty.chat.ChatInfo.LoginRequest) {
          return mergeFrom((com.gitchat.netty.chat.ChatInfo.LoginRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.gitchat.netty.chat.ChatInfo.LoginRequest other) {
        if (other == com.gitchat.netty.chat.ChatInfo.LoginRequest.getDefaultInstance()) return this;
        if (other.hasLoginUser()) {
          mergeLoginUser(other.getLoginUser());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.gitchat.netty.chat.ChatInfo.LoginRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.gitchat.netty.chat.ChatInfo.LoginRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.gitchat.netty.chat.ChatInfo.User loginUser_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder> loginUserBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
       */
      public boolean hasLoginUser() {
        return loginUserBuilder_ != null || loginUser_ != null;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.User getLoginUser() {
        if (loginUserBuilder_ == null) {
          return loginUser_ == null ? com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : loginUser_;
        } else {
          return loginUserBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
       */
      public Builder setLoginUser(com.gitchat.netty.chat.ChatInfo.User value) {
        if (loginUserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loginUser_ = value;
          onChanged();
        } else {
          loginUserBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
       */
      public Builder setLoginUser(
          com.gitchat.netty.chat.ChatInfo.User.Builder builderForValue) {
        if (loginUserBuilder_ == null) {
          loginUser_ = builderForValue.build();
          onChanged();
        } else {
          loginUserBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
       */
      public Builder mergeLoginUser(com.gitchat.netty.chat.ChatInfo.User value) {
        if (loginUserBuilder_ == null) {
          if (loginUser_ != null) {
            loginUser_ =
              com.gitchat.netty.chat.ChatInfo.User.newBuilder(loginUser_).mergeFrom(value).buildPartial();
          } else {
            loginUser_ = value;
          }
          onChanged();
        } else {
          loginUserBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
       */
      public Builder clearLoginUser() {
        if (loginUserBuilder_ == null) {
          loginUser_ = null;
          onChanged();
        } else {
          loginUser_ = null;
          loginUserBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.User.Builder getLoginUserBuilder() {
        
        onChanged();
        return getLoginUserFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.UserOrBuilder getLoginUserOrBuilder() {
        if (loginUserBuilder_ != null) {
          return loginUserBuilder_.getMessageOrBuilder();
        } else {
          return loginUser_ == null ?
              com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : loginUser_;
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User login_user = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder> 
          getLoginUserFieldBuilder() {
        if (loginUserBuilder_ == null) {
          loginUserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder>(
                  getLoginUser(),
                  getParentForChildren(),
                  isClean());
          loginUser_ = null;
        }
        return loginUserBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.gitchat.netty.protobuf.LoginRequest)
    }

    // @@protoc_insertion_point(class_scope:com.gitchat.netty.protobuf.LoginRequest)
    private static final com.gitchat.netty.chat.ChatInfo.LoginRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.gitchat.netty.chat.ChatInfo.LoginRequest();
    }

    public static com.gitchat.netty.chat.ChatInfo.LoginRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LoginRequest>
        PARSER = new com.google.protobuf.AbstractParser<LoginRequest>() {
      @java.lang.Override
      public LoginRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoginRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LoginRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LoginRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.gitchat.netty.chat.ChatInfo.LoginRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LoginResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.gitchat.netty.protobuf.LoginResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string token = 1;</code>
     */
    java.lang.String getToken();
    /**
     * <code>string token = 1;</code>
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    /**
     * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
     */
    boolean hasUserInfo();
    /**
     * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
     */
    com.gitchat.netty.chat.ChatInfo.User getUserInfo();
    /**
     * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
     */
    com.gitchat.netty.chat.ChatInfo.UserOrBuilder getUserInfoOrBuilder();
  }
  /**
   * Protobuf type {@code com.gitchat.netty.protobuf.LoginResponse}
   */
  public  static final class LoginResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.gitchat.netty.protobuf.LoginResponse)
      LoginResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LoginResponse.newBuilder() to construct.
    private LoginResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LoginResponse() {
      token_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LoginResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              token_ = s;
              break;
            }
            case 18: {
              com.gitchat.netty.chat.ChatInfo.User.Builder subBuilder = null;
              if (userInfo_ != null) {
                subBuilder = userInfo_.toBuilder();
              }
              userInfo_ = input.readMessage(com.gitchat.netty.chat.ChatInfo.User.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userInfo_);
                userInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_LoginResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_LoginResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gitchat.netty.chat.ChatInfo.LoginResponse.class, com.gitchat.netty.chat.ChatInfo.LoginResponse.Builder.class);
    }

    public static final int TOKEN_FIELD_NUMBER = 1;
    private volatile java.lang.Object token_;
    /**
     * <code>string token = 1;</code>
     */
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        token_ = s;
        return s;
      }
    }
    /**
     * <code>string token = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USER_INFO_FIELD_NUMBER = 2;
    private com.gitchat.netty.chat.ChatInfo.User userInfo_;
    /**
     * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
     */
    public boolean hasUserInfo() {
      return userInfo_ != null;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.User getUserInfo() {
      return userInfo_ == null ? com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : userInfo_;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.UserOrBuilder getUserInfoOrBuilder() {
      return getUserInfo();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, token_);
      }
      if (userInfo_ != null) {
        output.writeMessage(2, getUserInfo());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, token_);
      }
      if (userInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.gitchat.netty.chat.ChatInfo.LoginResponse)) {
        return super.equals(obj);
      }
      com.gitchat.netty.chat.ChatInfo.LoginResponse other = (com.gitchat.netty.chat.ChatInfo.LoginResponse) obj;

      boolean result = true;
      result = result && getToken()
          .equals(other.getToken());
      result = result && (hasUserInfo() == other.hasUserInfo());
      if (hasUserInfo()) {
        result = result && getUserInfo()
            .equals(other.getUserInfo());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getToken().hashCode();
      if (hasUserInfo()) {
        hash = (37 * hash) + USER_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getUserInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.gitchat.netty.chat.ChatInfo.LoginResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.LoginResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.gitchat.netty.chat.ChatInfo.LoginResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.gitchat.netty.protobuf.LoginResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.gitchat.netty.protobuf.LoginResponse)
        com.gitchat.netty.chat.ChatInfo.LoginResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_LoginResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_LoginResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.gitchat.netty.chat.ChatInfo.LoginResponse.class, com.gitchat.netty.chat.ChatInfo.LoginResponse.Builder.class);
      }

      // Construct using com.gitchat.netty.chat.ChatInfo.LoginResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        token_ = "";

        if (userInfoBuilder_ == null) {
          userInfo_ = null;
        } else {
          userInfo_ = null;
          userInfoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_LoginResponse_descriptor;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.LoginResponse getDefaultInstanceForType() {
        return com.gitchat.netty.chat.ChatInfo.LoginResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.LoginResponse build() {
        com.gitchat.netty.chat.ChatInfo.LoginResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.LoginResponse buildPartial() {
        com.gitchat.netty.chat.ChatInfo.LoginResponse result = new com.gitchat.netty.chat.ChatInfo.LoginResponse(this);
        result.token_ = token_;
        if (userInfoBuilder_ == null) {
          result.userInfo_ = userInfo_;
        } else {
          result.userInfo_ = userInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gitchat.netty.chat.ChatInfo.LoginResponse) {
          return mergeFrom((com.gitchat.netty.chat.ChatInfo.LoginResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.gitchat.netty.chat.ChatInfo.LoginResponse other) {
        if (other == com.gitchat.netty.chat.ChatInfo.LoginResponse.getDefaultInstance()) return this;
        if (!other.getToken().isEmpty()) {
          token_ = other.token_;
          onChanged();
        }
        if (other.hasUserInfo()) {
          mergeUserInfo(other.getUserInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.gitchat.netty.chat.ChatInfo.LoginResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.gitchat.netty.chat.ChatInfo.LoginResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object token_ = "";
      /**
       * <code>string token = 1;</code>
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string token = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string token = 1;</code>
       */
      public Builder setToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string token = 1;</code>
       */
      public Builder clearToken() {
        
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <code>string token = 1;</code>
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        token_ = value;
        onChanged();
        return this;
      }

      private com.gitchat.netty.chat.ChatInfo.User userInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder> userInfoBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
       */
      public boolean hasUserInfo() {
        return userInfoBuilder_ != null || userInfo_ != null;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.User getUserInfo() {
        if (userInfoBuilder_ == null) {
          return userInfo_ == null ? com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : userInfo_;
        } else {
          return userInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
       */
      public Builder setUserInfo(com.gitchat.netty.chat.ChatInfo.User value) {
        if (userInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userInfo_ = value;
          onChanged();
        } else {
          userInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
       */
      public Builder setUserInfo(
          com.gitchat.netty.chat.ChatInfo.User.Builder builderForValue) {
        if (userInfoBuilder_ == null) {
          userInfo_ = builderForValue.build();
          onChanged();
        } else {
          userInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
       */
      public Builder mergeUserInfo(com.gitchat.netty.chat.ChatInfo.User value) {
        if (userInfoBuilder_ == null) {
          if (userInfo_ != null) {
            userInfo_ =
              com.gitchat.netty.chat.ChatInfo.User.newBuilder(userInfo_).mergeFrom(value).buildPartial();
          } else {
            userInfo_ = value;
          }
          onChanged();
        } else {
          userInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
       */
      public Builder clearUserInfo() {
        if (userInfoBuilder_ == null) {
          userInfo_ = null;
          onChanged();
        } else {
          userInfo_ = null;
          userInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.User.Builder getUserInfoBuilder() {
        
        onChanged();
        return getUserInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.UserOrBuilder getUserInfoOrBuilder() {
        if (userInfoBuilder_ != null) {
          return userInfoBuilder_.getMessageOrBuilder();
        } else {
          return userInfo_ == null ?
              com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : userInfo_;
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User user_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder> 
          getUserInfoFieldBuilder() {
        if (userInfoBuilder_ == null) {
          userInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder>(
                  getUserInfo(),
                  getParentForChildren(),
                  isClean());
          userInfo_ = null;
        }
        return userInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.gitchat.netty.protobuf.LoginResponse)
    }

    // @@protoc_insertion_point(class_scope:com.gitchat.netty.protobuf.LoginResponse)
    private static final com.gitchat.netty.chat.ChatInfo.LoginResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.gitchat.netty.chat.ChatInfo.LoginResponse();
    }

    public static com.gitchat.netty.chat.ChatInfo.LoginResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LoginResponse>
        PARSER = new com.google.protobuf.AbstractParser<LoginResponse>() {
      @java.lang.Override
      public LoginResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoginResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LoginResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LoginResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.gitchat.netty.chat.ChatInfo.LoginResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SingleChatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.gitchat.netty.protobuf.SingleChat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
     */
    boolean hasFromUser();
    /**
     * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
     */
    com.gitchat.netty.chat.ChatInfo.User getFromUser();
    /**
     * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
     */
    com.gitchat.netty.chat.ChatInfo.UserOrBuilder getFromUserOrBuilder();

    /**
     * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
     */
    boolean hasToUser();
    /**
     * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
     */
    com.gitchat.netty.chat.ChatInfo.User getToUser();
    /**
     * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
     */
    com.gitchat.netty.chat.ChatInfo.UserOrBuilder getToUserOrBuilder();

    /**
     * <code>string msg_content = 3;</code>
     */
    java.lang.String getMsgContent();
    /**
     * <code>string msg_content = 3;</code>
     */
    com.google.protobuf.ByteString
        getMsgContentBytes();
  }
  /**
   * Protobuf type {@code com.gitchat.netty.protobuf.SingleChat}
   */
  public  static final class SingleChat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.gitchat.netty.protobuf.SingleChat)
      SingleChatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SingleChat.newBuilder() to construct.
    private SingleChat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SingleChat() {
      msgContent_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SingleChat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.gitchat.netty.chat.ChatInfo.User.Builder subBuilder = null;
              if (fromUser_ != null) {
                subBuilder = fromUser_.toBuilder();
              }
              fromUser_ = input.readMessage(com.gitchat.netty.chat.ChatInfo.User.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromUser_);
                fromUser_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.gitchat.netty.chat.ChatInfo.User.Builder subBuilder = null;
              if (toUser_ != null) {
                subBuilder = toUser_.toBuilder();
              }
              toUser_ = input.readMessage(com.gitchat.netty.chat.ChatInfo.User.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toUser_);
                toUser_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              msgContent_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_SingleChat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_SingleChat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gitchat.netty.chat.ChatInfo.SingleChat.class, com.gitchat.netty.chat.ChatInfo.SingleChat.Builder.class);
    }

    public static final int FROM_USER_FIELD_NUMBER = 1;
    private com.gitchat.netty.chat.ChatInfo.User fromUser_;
    /**
     * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
     */
    public boolean hasFromUser() {
      return fromUser_ != null;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.User getFromUser() {
      return fromUser_ == null ? com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : fromUser_;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.UserOrBuilder getFromUserOrBuilder() {
      return getFromUser();
    }

    public static final int TO_USER_FIELD_NUMBER = 2;
    private com.gitchat.netty.chat.ChatInfo.User toUser_;
    /**
     * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
     */
    public boolean hasToUser() {
      return toUser_ != null;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.User getToUser() {
      return toUser_ == null ? com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : toUser_;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.UserOrBuilder getToUserOrBuilder() {
      return getToUser();
    }

    public static final int MSG_CONTENT_FIELD_NUMBER = 3;
    private volatile java.lang.Object msgContent_;
    /**
     * <code>string msg_content = 3;</code>
     */
    public java.lang.String getMsgContent() {
      java.lang.Object ref = msgContent_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        msgContent_ = s;
        return s;
      }
    }
    /**
     * <code>string msg_content = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMsgContentBytes() {
      java.lang.Object ref = msgContent_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgContent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fromUser_ != null) {
        output.writeMessage(1, getFromUser());
      }
      if (toUser_ != null) {
        output.writeMessage(2, getToUser());
      }
      if (!getMsgContentBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, msgContent_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fromUser_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFromUser());
      }
      if (toUser_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToUser());
      }
      if (!getMsgContentBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, msgContent_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.gitchat.netty.chat.ChatInfo.SingleChat)) {
        return super.equals(obj);
      }
      com.gitchat.netty.chat.ChatInfo.SingleChat other = (com.gitchat.netty.chat.ChatInfo.SingleChat) obj;

      boolean result = true;
      result = result && (hasFromUser() == other.hasFromUser());
      if (hasFromUser()) {
        result = result && getFromUser()
            .equals(other.getFromUser());
      }
      result = result && (hasToUser() == other.hasToUser());
      if (hasToUser()) {
        result = result && getToUser()
            .equals(other.getToUser());
      }
      result = result && getMsgContent()
          .equals(other.getMsgContent());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFromUser()) {
        hash = (37 * hash) + FROM_USER_FIELD_NUMBER;
        hash = (53 * hash) + getFromUser().hashCode();
      }
      if (hasToUser()) {
        hash = (37 * hash) + TO_USER_FIELD_NUMBER;
        hash = (53 * hash) + getToUser().hashCode();
      }
      hash = (37 * hash) + MSG_CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getMsgContent().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.gitchat.netty.chat.ChatInfo.SingleChat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.SingleChat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.SingleChat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.SingleChat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.SingleChat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.SingleChat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.SingleChat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.SingleChat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.SingleChat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.SingleChat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.SingleChat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.SingleChat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.gitchat.netty.chat.ChatInfo.SingleChat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.gitchat.netty.protobuf.SingleChat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.gitchat.netty.protobuf.SingleChat)
        com.gitchat.netty.chat.ChatInfo.SingleChatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_SingleChat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_SingleChat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.gitchat.netty.chat.ChatInfo.SingleChat.class, com.gitchat.netty.chat.ChatInfo.SingleChat.Builder.class);
      }

      // Construct using com.gitchat.netty.chat.ChatInfo.SingleChat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fromUserBuilder_ == null) {
          fromUser_ = null;
        } else {
          fromUser_ = null;
          fromUserBuilder_ = null;
        }
        if (toUserBuilder_ == null) {
          toUser_ = null;
        } else {
          toUser_ = null;
          toUserBuilder_ = null;
        }
        msgContent_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_SingleChat_descriptor;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.SingleChat getDefaultInstanceForType() {
        return com.gitchat.netty.chat.ChatInfo.SingleChat.getDefaultInstance();
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.SingleChat build() {
        com.gitchat.netty.chat.ChatInfo.SingleChat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.SingleChat buildPartial() {
        com.gitchat.netty.chat.ChatInfo.SingleChat result = new com.gitchat.netty.chat.ChatInfo.SingleChat(this);
        if (fromUserBuilder_ == null) {
          result.fromUser_ = fromUser_;
        } else {
          result.fromUser_ = fromUserBuilder_.build();
        }
        if (toUserBuilder_ == null) {
          result.toUser_ = toUser_;
        } else {
          result.toUser_ = toUserBuilder_.build();
        }
        result.msgContent_ = msgContent_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gitchat.netty.chat.ChatInfo.SingleChat) {
          return mergeFrom((com.gitchat.netty.chat.ChatInfo.SingleChat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.gitchat.netty.chat.ChatInfo.SingleChat other) {
        if (other == com.gitchat.netty.chat.ChatInfo.SingleChat.getDefaultInstance()) return this;
        if (other.hasFromUser()) {
          mergeFromUser(other.getFromUser());
        }
        if (other.hasToUser()) {
          mergeToUser(other.getToUser());
        }
        if (!other.getMsgContent().isEmpty()) {
          msgContent_ = other.msgContent_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.gitchat.netty.chat.ChatInfo.SingleChat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.gitchat.netty.chat.ChatInfo.SingleChat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.gitchat.netty.chat.ChatInfo.User fromUser_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder> fromUserBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
       */
      public boolean hasFromUser() {
        return fromUserBuilder_ != null || fromUser_ != null;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.User getFromUser() {
        if (fromUserBuilder_ == null) {
          return fromUser_ == null ? com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : fromUser_;
        } else {
          return fromUserBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
       */
      public Builder setFromUser(com.gitchat.netty.chat.ChatInfo.User value) {
        if (fromUserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromUser_ = value;
          onChanged();
        } else {
          fromUserBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
       */
      public Builder setFromUser(
          com.gitchat.netty.chat.ChatInfo.User.Builder builderForValue) {
        if (fromUserBuilder_ == null) {
          fromUser_ = builderForValue.build();
          onChanged();
        } else {
          fromUserBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
       */
      public Builder mergeFromUser(com.gitchat.netty.chat.ChatInfo.User value) {
        if (fromUserBuilder_ == null) {
          if (fromUser_ != null) {
            fromUser_ =
              com.gitchat.netty.chat.ChatInfo.User.newBuilder(fromUser_).mergeFrom(value).buildPartial();
          } else {
            fromUser_ = value;
          }
          onChanged();
        } else {
          fromUserBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
       */
      public Builder clearFromUser() {
        if (fromUserBuilder_ == null) {
          fromUser_ = null;
          onChanged();
        } else {
          fromUser_ = null;
          fromUserBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.User.Builder getFromUserBuilder() {
        
        onChanged();
        return getFromUserFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.UserOrBuilder getFromUserOrBuilder() {
        if (fromUserBuilder_ != null) {
          return fromUserBuilder_.getMessageOrBuilder();
        } else {
          return fromUser_ == null ?
              com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : fromUser_;
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder> 
          getFromUserFieldBuilder() {
        if (fromUserBuilder_ == null) {
          fromUserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder>(
                  getFromUser(),
                  getParentForChildren(),
                  isClean());
          fromUser_ = null;
        }
        return fromUserBuilder_;
      }

      private com.gitchat.netty.chat.ChatInfo.User toUser_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder> toUserBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
       */
      public boolean hasToUser() {
        return toUserBuilder_ != null || toUser_ != null;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.User getToUser() {
        if (toUserBuilder_ == null) {
          return toUser_ == null ? com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : toUser_;
        } else {
          return toUserBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
       */
      public Builder setToUser(com.gitchat.netty.chat.ChatInfo.User value) {
        if (toUserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toUser_ = value;
          onChanged();
        } else {
          toUserBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
       */
      public Builder setToUser(
          com.gitchat.netty.chat.ChatInfo.User.Builder builderForValue) {
        if (toUserBuilder_ == null) {
          toUser_ = builderForValue.build();
          onChanged();
        } else {
          toUserBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
       */
      public Builder mergeToUser(com.gitchat.netty.chat.ChatInfo.User value) {
        if (toUserBuilder_ == null) {
          if (toUser_ != null) {
            toUser_ =
              com.gitchat.netty.chat.ChatInfo.User.newBuilder(toUser_).mergeFrom(value).buildPartial();
          } else {
            toUser_ = value;
          }
          onChanged();
        } else {
          toUserBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
       */
      public Builder clearToUser() {
        if (toUserBuilder_ == null) {
          toUser_ = null;
          onChanged();
        } else {
          toUser_ = null;
          toUserBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.User.Builder getToUserBuilder() {
        
        onChanged();
        return getToUserFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.UserOrBuilder getToUserOrBuilder() {
        if (toUserBuilder_ != null) {
          return toUserBuilder_.getMessageOrBuilder();
        } else {
          return toUser_ == null ?
              com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : toUser_;
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User to_user = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder> 
          getToUserFieldBuilder() {
        if (toUserBuilder_ == null) {
          toUserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder>(
                  getToUser(),
                  getParentForChildren(),
                  isClean());
          toUser_ = null;
        }
        return toUserBuilder_;
      }

      private java.lang.Object msgContent_ = "";
      /**
       * <code>string msg_content = 3;</code>
       */
      public java.lang.String getMsgContent() {
        java.lang.Object ref = msgContent_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          msgContent_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string msg_content = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMsgContentBytes() {
        java.lang.Object ref = msgContent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgContent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string msg_content = 3;</code>
       */
      public Builder setMsgContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        msgContent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string msg_content = 3;</code>
       */
      public Builder clearMsgContent() {
        
        msgContent_ = getDefaultInstance().getMsgContent();
        onChanged();
        return this;
      }
      /**
       * <code>string msg_content = 3;</code>
       */
      public Builder setMsgContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        msgContent_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.gitchat.netty.protobuf.SingleChat)
    }

    // @@protoc_insertion_point(class_scope:com.gitchat.netty.protobuf.SingleChat)
    private static final com.gitchat.netty.chat.ChatInfo.SingleChat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.gitchat.netty.chat.ChatInfo.SingleChat();
    }

    public static com.gitchat.netty.chat.ChatInfo.SingleChat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SingleChat>
        PARSER = new com.google.protobuf.AbstractParser<SingleChat>() {
      @java.lang.Override
      public SingleChat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SingleChat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SingleChat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SingleChat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.gitchat.netty.chat.ChatInfo.SingleChat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GroupChatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.gitchat.netty.protobuf.GroupChat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string group_id = 1;</code>
     */
    java.lang.String getGroupId();
    /**
     * <code>string group_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getGroupIdBytes();

    /**
     * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
     */
    boolean hasFromUser();
    /**
     * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
     */
    com.gitchat.netty.chat.ChatInfo.User getFromUser();
    /**
     * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
     */
    com.gitchat.netty.chat.ChatInfo.UserOrBuilder getFromUserOrBuilder();

    /**
     * <code>string msg_content = 3;</code>
     */
    java.lang.String getMsgContent();
    /**
     * <code>string msg_content = 3;</code>
     */
    com.google.protobuf.ByteString
        getMsgContentBytes();
  }
  /**
   * Protobuf type {@code com.gitchat.netty.protobuf.GroupChat}
   */
  public  static final class GroupChat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.gitchat.netty.protobuf.GroupChat)
      GroupChatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GroupChat.newBuilder() to construct.
    private GroupChat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GroupChat() {
      groupId_ = "";
      msgContent_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GroupChat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              groupId_ = s;
              break;
            }
            case 18: {
              com.gitchat.netty.chat.ChatInfo.User.Builder subBuilder = null;
              if (fromUser_ != null) {
                subBuilder = fromUser_.toBuilder();
              }
              fromUser_ = input.readMessage(com.gitchat.netty.chat.ChatInfo.User.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromUser_);
                fromUser_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              msgContent_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_GroupChat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_GroupChat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gitchat.netty.chat.ChatInfo.GroupChat.class, com.gitchat.netty.chat.ChatInfo.GroupChat.Builder.class);
    }

    public static final int GROUP_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object groupId_;
    /**
     * <code>string group_id = 1;</code>
     */
    public java.lang.String getGroupId() {
      java.lang.Object ref = groupId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        groupId_ = s;
        return s;
      }
    }
    /**
     * <code>string group_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGroupIdBytes() {
      java.lang.Object ref = groupId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FROM_USER_FIELD_NUMBER = 2;
    private com.gitchat.netty.chat.ChatInfo.User fromUser_;
    /**
     * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
     */
    public boolean hasFromUser() {
      return fromUser_ != null;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.User getFromUser() {
      return fromUser_ == null ? com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : fromUser_;
    }
    /**
     * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
     */
    public com.gitchat.netty.chat.ChatInfo.UserOrBuilder getFromUserOrBuilder() {
      return getFromUser();
    }

    public static final int MSG_CONTENT_FIELD_NUMBER = 3;
    private volatile java.lang.Object msgContent_;
    /**
     * <code>string msg_content = 3;</code>
     */
    public java.lang.String getMsgContent() {
      java.lang.Object ref = msgContent_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        msgContent_ = s;
        return s;
      }
    }
    /**
     * <code>string msg_content = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMsgContentBytes() {
      java.lang.Object ref = msgContent_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgContent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getGroupIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, groupId_);
      }
      if (fromUser_ != null) {
        output.writeMessage(2, getFromUser());
      }
      if (!getMsgContentBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, msgContent_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getGroupIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, groupId_);
      }
      if (fromUser_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFromUser());
      }
      if (!getMsgContentBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, msgContent_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.gitchat.netty.chat.ChatInfo.GroupChat)) {
        return super.equals(obj);
      }
      com.gitchat.netty.chat.ChatInfo.GroupChat other = (com.gitchat.netty.chat.ChatInfo.GroupChat) obj;

      boolean result = true;
      result = result && getGroupId()
          .equals(other.getGroupId());
      result = result && (hasFromUser() == other.hasFromUser());
      if (hasFromUser()) {
        result = result && getFromUser()
            .equals(other.getFromUser());
      }
      result = result && getMsgContent()
          .equals(other.getMsgContent());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGroupId().hashCode();
      if (hasFromUser()) {
        hash = (37 * hash) + FROM_USER_FIELD_NUMBER;
        hash = (53 * hash) + getFromUser().hashCode();
      }
      hash = (37 * hash) + MSG_CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getMsgContent().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.gitchat.netty.chat.ChatInfo.GroupChat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.GroupChat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.GroupChat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.GroupChat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.GroupChat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.gitchat.netty.chat.ChatInfo.GroupChat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.GroupChat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.GroupChat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.GroupChat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.GroupChat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.gitchat.netty.chat.ChatInfo.GroupChat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.gitchat.netty.chat.ChatInfo.GroupChat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.gitchat.netty.chat.ChatInfo.GroupChat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.gitchat.netty.protobuf.GroupChat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.gitchat.netty.protobuf.GroupChat)
        com.gitchat.netty.chat.ChatInfo.GroupChatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_GroupChat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_GroupChat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.gitchat.netty.chat.ChatInfo.GroupChat.class, com.gitchat.netty.chat.ChatInfo.GroupChat.Builder.class);
      }

      // Construct using com.gitchat.netty.chat.ChatInfo.GroupChat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        groupId_ = "";

        if (fromUserBuilder_ == null) {
          fromUser_ = null;
        } else {
          fromUser_ = null;
          fromUserBuilder_ = null;
        }
        msgContent_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gitchat.netty.chat.ChatInfo.internal_static_com_gitchat_netty_protobuf_GroupChat_descriptor;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.GroupChat getDefaultInstanceForType() {
        return com.gitchat.netty.chat.ChatInfo.GroupChat.getDefaultInstance();
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.GroupChat build() {
        com.gitchat.netty.chat.ChatInfo.GroupChat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.gitchat.netty.chat.ChatInfo.GroupChat buildPartial() {
        com.gitchat.netty.chat.ChatInfo.GroupChat result = new com.gitchat.netty.chat.ChatInfo.GroupChat(this);
        result.groupId_ = groupId_;
        if (fromUserBuilder_ == null) {
          result.fromUser_ = fromUser_;
        } else {
          result.fromUser_ = fromUserBuilder_.build();
        }
        result.msgContent_ = msgContent_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gitchat.netty.chat.ChatInfo.GroupChat) {
          return mergeFrom((com.gitchat.netty.chat.ChatInfo.GroupChat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.gitchat.netty.chat.ChatInfo.GroupChat other) {
        if (other == com.gitchat.netty.chat.ChatInfo.GroupChat.getDefaultInstance()) return this;
        if (!other.getGroupId().isEmpty()) {
          groupId_ = other.groupId_;
          onChanged();
        }
        if (other.hasFromUser()) {
          mergeFromUser(other.getFromUser());
        }
        if (!other.getMsgContent().isEmpty()) {
          msgContent_ = other.msgContent_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.gitchat.netty.chat.ChatInfo.GroupChat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.gitchat.netty.chat.ChatInfo.GroupChat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object groupId_ = "";
      /**
       * <code>string group_id = 1;</code>
       */
      public java.lang.String getGroupId() {
        java.lang.Object ref = groupId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          groupId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string group_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGroupIdBytes() {
        java.lang.Object ref = groupId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          groupId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string group_id = 1;</code>
       */
      public Builder setGroupId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string group_id = 1;</code>
       */
      public Builder clearGroupId() {
        
        groupId_ = getDefaultInstance().getGroupId();
        onChanged();
        return this;
      }
      /**
       * <code>string group_id = 1;</code>
       */
      public Builder setGroupIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        groupId_ = value;
        onChanged();
        return this;
      }

      private com.gitchat.netty.chat.ChatInfo.User fromUser_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder> fromUserBuilder_;
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
       */
      public boolean hasFromUser() {
        return fromUserBuilder_ != null || fromUser_ != null;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.User getFromUser() {
        if (fromUserBuilder_ == null) {
          return fromUser_ == null ? com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : fromUser_;
        } else {
          return fromUserBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
       */
      public Builder setFromUser(com.gitchat.netty.chat.ChatInfo.User value) {
        if (fromUserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromUser_ = value;
          onChanged();
        } else {
          fromUserBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
       */
      public Builder setFromUser(
          com.gitchat.netty.chat.ChatInfo.User.Builder builderForValue) {
        if (fromUserBuilder_ == null) {
          fromUser_ = builderForValue.build();
          onChanged();
        } else {
          fromUserBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
       */
      public Builder mergeFromUser(com.gitchat.netty.chat.ChatInfo.User value) {
        if (fromUserBuilder_ == null) {
          if (fromUser_ != null) {
            fromUser_ =
              com.gitchat.netty.chat.ChatInfo.User.newBuilder(fromUser_).mergeFrom(value).buildPartial();
          } else {
            fromUser_ = value;
          }
          onChanged();
        } else {
          fromUserBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
       */
      public Builder clearFromUser() {
        if (fromUserBuilder_ == null) {
          fromUser_ = null;
          onChanged();
        } else {
          fromUser_ = null;
          fromUserBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.User.Builder getFromUserBuilder() {
        
        onChanged();
        return getFromUserFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
       */
      public com.gitchat.netty.chat.ChatInfo.UserOrBuilder getFromUserOrBuilder() {
        if (fromUserBuilder_ != null) {
          return fromUserBuilder_.getMessageOrBuilder();
        } else {
          return fromUser_ == null ?
              com.gitchat.netty.chat.ChatInfo.User.getDefaultInstance() : fromUser_;
        }
      }
      /**
       * <code>.com.gitchat.netty.protobuf.User from_user = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder> 
          getFromUserFieldBuilder() {
        if (fromUserBuilder_ == null) {
          fromUserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.gitchat.netty.chat.ChatInfo.User, com.gitchat.netty.chat.ChatInfo.User.Builder, com.gitchat.netty.chat.ChatInfo.UserOrBuilder>(
                  getFromUser(),
                  getParentForChildren(),
                  isClean());
          fromUser_ = null;
        }
        return fromUserBuilder_;
      }

      private java.lang.Object msgContent_ = "";
      /**
       * <code>string msg_content = 3;</code>
       */
      public java.lang.String getMsgContent() {
        java.lang.Object ref = msgContent_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          msgContent_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string msg_content = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMsgContentBytes() {
        java.lang.Object ref = msgContent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgContent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string msg_content = 3;</code>
       */
      public Builder setMsgContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        msgContent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string msg_content = 3;</code>
       */
      public Builder clearMsgContent() {
        
        msgContent_ = getDefaultInstance().getMsgContent();
        onChanged();
        return this;
      }
      /**
       * <code>string msg_content = 3;</code>
       */
      public Builder setMsgContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        msgContent_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.gitchat.netty.protobuf.GroupChat)
    }

    // @@protoc_insertion_point(class_scope:com.gitchat.netty.protobuf.GroupChat)
    private static final com.gitchat.netty.chat.ChatInfo.GroupChat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.gitchat.netty.chat.ChatInfo.GroupChat();
    }

    public static com.gitchat.netty.chat.ChatInfo.GroupChat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GroupChat>
        PARSER = new com.google.protobuf.AbstractParser<GroupChat>() {
      @java.lang.Override
      public GroupChat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GroupChat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GroupChat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GroupChat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.gitchat.netty.chat.ChatInfo.GroupChat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_gitchat_netty_protobuf_Chat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_gitchat_netty_protobuf_Chat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_gitchat_netty_protobuf_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_gitchat_netty_protobuf_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_gitchat_netty_protobuf_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_gitchat_netty_protobuf_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_gitchat_netty_protobuf_User_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_gitchat_netty_protobuf_User_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_gitchat_netty_protobuf_Notification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_gitchat_netty_protobuf_Notification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_gitchat_netty_protobuf_WelcomeNotification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_gitchat_netty_protobuf_WelcomeNotification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_gitchat_netty_protobuf_Command_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_gitchat_netty_protobuf_Command_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_gitchat_netty_protobuf_LoginRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_gitchat_netty_protobuf_LoginRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_gitchat_netty_protobuf_LoginResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_gitchat_netty_protobuf_LoginResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_gitchat_netty_protobuf_SingleChat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_gitchat_netty_protobuf_SingleChat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_gitchat_netty_protobuf_GroupChat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_gitchat_netty_protobuf_GroupChat_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+src/main/resources/protobuf/chat/Chat." +
      "proto\022\032com.gitchat.netty.protobuf\"\334\002\n\004Ch" +
      "at\022\017\n\007version\030\001 \001(\014\022>\n\010msg_type\030\002 \001(\0162,." +
      "com.gitchat.netty.protobuf.Chat.MessageT" +
      "ype\0222\n\003req\030\003 \001(\0132#.com.gitchat.netty.pro" +
      "tobuf.RequestH\000\0224\n\004resp\030\004 \001(\0132$.com.gitc" +
      "hat.netty.protobuf.ResponseH\000\022:\n\006notifi\030" +
      "\005 \001(\0132(.com.gitchat.netty.protobuf.Notif" +
      "icationH\000\"U\n\013MessageType\022\021\n\rLOGIN_REQUES" +
      "T\020\000\022\022\n\016LOGIN_RESPONSE\020\001\022\017\n\013SINGLE_CHAT\020\002" +
      "\022\016\n\nGROUP_CHAT\020\003B\006\n\004data\"\307\001\n\007Request\0229\n\005" +
      "login\030\001 \001(\0132(.com.gitchat.netty.protobuf" +
      ".LoginRequestH\000\022=\n\013single_chat\030\002 \001(\0132&.c" +
      "om.gitchat.netty.protobuf.SingleChatH\000\022;" +
      "\n\ngroup_chat\030\003 \001(\0132%.com.gitchat.netty.p" +
      "rotobuf.GroupChatH\000B\005\n\003req\"r\n\010Response\022\014" +
      "\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022C\n\016login_respo" +
      "nse\030\003 \001(\0132).com.gitchat.netty.protobuf.L" +
      "oginResponseH\000B\006\n\004data\";\n\004User\022\017\n\007user_i" +
      "d\030\001 \001(\t\022\020\n\010username\030\002 \001(\t\022\020\n\010password\030\003 " +
      "\001(\t\"\\\n\014Notification\022B\n\007welcome\030\001 \001(\0132/.c" +
      "om.gitchat.netty.protobuf.WelcomeNotific" +
      "ationH\000B\010\n\006notifi\"#\n\023WelcomeNotification" +
      "\022\014\n\004text\030\001 \001(\t\"\t\n\007Command\"D\n\014LoginReques" +
      "t\0224\n\nlogin_user\030\001 \001(\0132 .com.gitchat.nett" +
      "y.protobuf.User\"S\n\rLoginResponse\022\r\n\005toke" +
      "n\030\001 \001(\t\0223\n\tuser_info\030\002 \001(\0132 .com.gitchat" +
      ".netty.protobuf.User\"\211\001\n\nSingleChat\0223\n\tf" +
      "rom_user\030\001 \001(\0132 .com.gitchat.netty.proto" +
      "buf.User\0221\n\007to_user\030\002 \001(\0132 .com.gitchat." +
      "netty.protobuf.User\022\023\n\013msg_content\030\003 \001(\t" +
      "\"g\n\tGroupChat\022\020\n\010group_id\030\001 \001(\t\0223\n\tfrom_" +
      "user\030\002 \001(\0132 .com.gitchat.netty.protobuf." +
      "User\022\023\n\013msg_content\030\003 \001(\tB$\n\026com.gitchat" +
      ".netty.chatB\010ChatInfoP\000b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_gitchat_netty_protobuf_Chat_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_gitchat_netty_protobuf_Chat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_gitchat_netty_protobuf_Chat_descriptor,
        new java.lang.String[] { "Version", "MsgType", "Req", "Resp", "Notifi", "Data", });
    internal_static_com_gitchat_netty_protobuf_Request_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_gitchat_netty_protobuf_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_gitchat_netty_protobuf_Request_descriptor,
        new java.lang.String[] { "Login", "SingleChat", "GroupChat", "Req", });
    internal_static_com_gitchat_netty_protobuf_Response_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_gitchat_netty_protobuf_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_gitchat_netty_protobuf_Response_descriptor,
        new java.lang.String[] { "Code", "Msg", "LoginResponse", "Data", });
    internal_static_com_gitchat_netty_protobuf_User_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_gitchat_netty_protobuf_User_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_gitchat_netty_protobuf_User_descriptor,
        new java.lang.String[] { "UserId", "Username", "Password", });
    internal_static_com_gitchat_netty_protobuf_Notification_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_gitchat_netty_protobuf_Notification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_gitchat_netty_protobuf_Notification_descriptor,
        new java.lang.String[] { "Welcome", "Notifi", });
    internal_static_com_gitchat_netty_protobuf_WelcomeNotification_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_gitchat_netty_protobuf_WelcomeNotification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_gitchat_netty_protobuf_WelcomeNotification_descriptor,
        new java.lang.String[] { "Text", });
    internal_static_com_gitchat_netty_protobuf_Command_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_gitchat_netty_protobuf_Command_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_gitchat_netty_protobuf_Command_descriptor,
        new java.lang.String[] { });
    internal_static_com_gitchat_netty_protobuf_LoginRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_gitchat_netty_protobuf_LoginRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_gitchat_netty_protobuf_LoginRequest_descriptor,
        new java.lang.String[] { "LoginUser", });
    internal_static_com_gitchat_netty_protobuf_LoginResponse_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_gitchat_netty_protobuf_LoginResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_gitchat_netty_protobuf_LoginResponse_descriptor,
        new java.lang.String[] { "Token", "UserInfo", });
    internal_static_com_gitchat_netty_protobuf_SingleChat_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_com_gitchat_netty_protobuf_SingleChat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_gitchat_netty_protobuf_SingleChat_descriptor,
        new java.lang.String[] { "FromUser", "ToUser", "MsgContent", });
    internal_static_com_gitchat_netty_protobuf_GroupChat_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_com_gitchat_netty_protobuf_GroupChat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_gitchat_netty_protobuf_GroupChat_descriptor,
        new java.lang.String[] { "GroupId", "FromUser", "MsgContent", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
